{"ast":null,"code":"/////////////////////////// FOR  ALL USERS ////////////////////////////////////\nexport const setUser = user => ({\n  type: 'SET_USER',\n  user\n});\nexport const getAndSetUser = username => {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      fetch('http://localhost:5000/get_user', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      }).then(response => response.json()).then(user => {\n        // RENAME ID TO USERNAME \n        user['username'] = user['_id'];\n        /** \n        *  REMOVE PASSWORD BECAUSE WE DONT \n        *  NEED PASSWORD IN FRONTEND\n        *  AND PASSWORD SHOULD NOT BE SAVED IN COOKIES\n        */\n\n        delete user['password'];\n        dispatch(setUser(user));\n        resolve();\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  };\n}; /////////////////////////////// FOR ALL USERS END ///////////////////////////////////","map":{"version":3,"sources":["C:/Users/USER/Downloads/PBL5_Demo/PBL5_Demo/Frontend/src/actions/user.js"],"names":["setUser","user","type","getAndSetUser","username","dispatch","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error"],"mappings":"AAAA;AAEA,OAAO,MAAMA,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAE,UAD0B;AAEhCD,EAAAA;AAFgC,CAAX,CAAhB;AAKP,OAAO,MAAME,aAAa,GAAKC,QAAD,IAAY;AACxC,SAAQC,QAAD,IAAY;AACb,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACpCC,MAAAA,KAAK,CAAC,gCAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAC;AACN,0BAAgB;AADV,SAF6B;AAKrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA;AADmB,SAAf;AAL+B,OAAlC,CAAL,CASCW,IATD,CASMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATlB,EAUCF,IAVD,CAUMd,IAAI,IAAI;AACZ;AACAA,QAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmBA,IAAI,CAAC,KAAD,CAAvB;AACA;AACZ;AACA;AACA;AACA;;AACY,eAAOA,IAAI,CAAC,UAAD,CAAX;AACAI,QAAAA,QAAQ,CAACL,OAAO,CAACC,IAAD,CAAR,CAAR;AAEAM,QAAAA,OAAO;AACR,OAtBD,EAuBCW,KAvBD,CAuBOC,KAAK,IAAI;AACdX,QAAAA,MAAM,CAACW,KAAD,CAAN;AACD,OAzBD;AA0BD,KA3BM,CAAP;AA4BL,GA7BD;AA8BD,CA/BM,C,CAkCP","sourcesContent":["/////////////////////////// FOR  ALL USERS ////////////////////////////////////\n\nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  user\n})\n\nexport const getAndSetUser = ((username)=>{\n  return (dispatch)=>{\n        return new Promise((resolve, reject)=>{\n          fetch('http://localhost:5000/get_user',{\n            method: 'POST',\n            headers:{\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              username\n            })\n          })\n          .then(response => response.json())\n          .then(user => {\n            // RENAME ID TO USERNAME \n            user['username'] = user['_id']\n            /** \n            *  REMOVE PASSWORD BECAUSE WE DONT \n            *  NEED PASSWORD IN FRONTEND\n            *  AND PASSWORD SHOULD NOT BE SAVED IN COOKIES\n            */\n            delete user['password']\n            dispatch(setUser(user))\n\n            resolve();\n          })\n          .catch(error => {\n            reject(error);\n          })\n        })\n  }\n})\n\n\n/////////////////////////////// FOR ALL USERS END ///////////////////////////////////\n\n\n"]},"metadata":{},"sourceType":"module"}