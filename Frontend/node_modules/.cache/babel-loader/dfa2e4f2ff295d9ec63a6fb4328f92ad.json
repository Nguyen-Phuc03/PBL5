{"ast":null,"code":"const studentReducerDefaultState = [];\n\nconst studentReducer = (state = studentReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'ADD_STUDENT':\n      //  CHECK IF COURSE ALREADY EXISTS ONLY THEN SAVE IT...\n      if (!state.find(student => student.username === action.student.username)) {\n        return [...state, action.student];\n      } else {\n        return state;\n      }\n\n    case 'UPDATE_STUDENT':\n      const {\n        whomToUpdate,\n        whatToUpdate\n      } = action;\n      const updatedState = state.map(student => {\n        if (student.username === whomToUpdate) {\n          return { ...student,\n            ...whatToUpdate\n          };\n        } else {\n          return student;\n        }\n      });\n      return updatedState;\n\n    case 'CLEAR_STUDENTS':\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default studentReducer;","map":{"version":3,"sources":["E:/Documents/Reactjs/PBL5_Demo/Frontend/src/reducers/students.js"],"names":["studentReducerDefaultState","studentReducer","state","action","type","find","student","username","whomToUpdate","whatToUpdate","updatedState","map"],"mappings":"AAAA,MAAMA,0BAA0B,GAAG,EAAnC;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGF,0BAAT,EAAqCG,MAArC,KAA+C;AAClE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACA;AACI,UAAG,CAACF,KAAK,CAACG,IAAN,CAAYC,OAAO,IAAIA,OAAO,CAACC,QAAR,KAAqBJ,MAAM,CAACG,OAAP,CAAeC,QAA3D,CAAJ,EAAyE;AACrE,eAAO,CACH,GAAGL,KADA,EAEHC,MAAM,CAACG,OAFJ,CAAP;AAIH,OALD,MAKK;AACD,eAAOJ,KAAP;AACH;;AACL,SAAK,gBAAL;AACI,YAAM;AAAEM,QAAAA,YAAF;AAAeC,QAAAA;AAAf,UAA+BN,MAArC;AACA,YAAMO,YAAY,GAAGR,KAAK,CAACS,GAAN,CAAUL,OAAO,IAAI;AACtC,YAAGA,OAAO,CAACC,QAAR,KAAqBC,YAAxB,EAAqC;AACjC,iBAAO,EACH,GAAGF,OADA;AAEH,eAAGG;AAFA,WAAP;AAIH,SALD,MAKK;AACD,iBAAOH,OAAP;AACH;AACJ,OAToB,CAArB;AAUA,aAAOI,YAAP;;AACJ,SAAK,gBAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOR,KAAP;AA3BR;AA6BH,CA9BD;;AAgCA,eAAeD,cAAf","sourcesContent":["const studentReducerDefaultState = []\n\nconst studentReducer = (state = studentReducerDefaultState, action) =>{\n    switch(action.type){\n        case 'ADD_STUDENT':\n        //  CHECK IF COURSE ALREADY EXISTS ONLY THEN SAVE IT...\n            if(!state.find( student => student.username === action.student.username)){\n                return [\n                    ...state,\n                    action.student\n                ]\n            }else{\n                return state\n            }\n        case 'UPDATE_STUDENT':\n            const { whomToUpdate,whatToUpdate} = action;\n            const updatedState = state.map(student => {\n                if(student.username === whomToUpdate){\n                    return {\n                        ...student,\n                        ...whatToUpdate\n                    }\n                }else{\n                    return student\n                }\n            })\n            return updatedState\n        case 'CLEAR_STUDENTS':\n            return []\n        default:\n            return state;\n    }\n}\n\nexport default studentReducer;"]},"metadata":{},"sourceType":"module"}