{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\PBL5_Demo\\\\PBL5_Demo\\\\Frontend\\\\src\\\\components\\\\AddCoursePage\\\\AddCoursePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAndSetDepartments } from '../../actions/department';\nimport { getAndSetTeachers } from '../../actions/teachers';\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage';\n\nclass AddCoursePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = e => {\n      const value = e.target.value;\n      const name = e.target.id; // FETCH ONLY TEACHER OF CORRESPONDING DEPARTMENT\n\n      if (name === \"department\") {\n        const teacherFilters = {\n          \"department\": value\n        };\n        const teacherProjection = {};\n        this.props.setTeachers(teacherFilters, teacherProjection).then(() => {\n          const teacher = this.props.teachers[0];\n          /**\n           * CHECK IF TEACHER IS EMPTY\n           */\n\n          if (teacher) {\n            setInputState.call(this, \"data\", \"teacherAssigned\", this.props.teachers[0]['name']);\n          } else {\n            /**\n             * IF THERE IS NOT TEACHER IN THE DEPARTMENT\n             * WE HAVE TO GIVE AN ERROR\n             * TO ADD TEACHER IN THE DEPARTMENT FIRST\n             * \n             * AND\n             * \n             * SET TEACHER TO EMPTY STRING IN data\n             */\n            setInputState.call(this, \"data\", \"teacherAssigned\", \"\");\n            this.setErrors({\n              \"otherError\": \"No Teacher ADDED to the Department\"\n            });\n          }\n        });\n      }\n\n      setInputState.call(this, \"data\", name, value);\n    };\n\n    this.setDefaultState = () => {\n      console.log(this.props);\n      const department = this.props.departments ? this.props.departments[0]['name'] : \"\";\n      const teacherAssigned = this.props.teachers ? this.props.teachers[0]['name'] : \"\";\n      setInputState.call(this, \"data\", \"department\", department);\n      setInputState.call(this, \"data\", \"teacherAssigned\", teacherAssigned);\n    };\n\n    this.setErrors = toUpdate => {\n      this.setState(prevState => {\n        return {\n          errors: { ...prevState.errors,\n            ...toUpdate\n          }\n        };\n      });\n      this.setState({\n        errorsExists: true\n      });\n    };\n\n    this.clearAllErrors = () => {\n      this.setErrors({\n        name: \"\",\n        otherError: \"\",\n        exists: \"\"\n      });\n      this.setState({\n        errorsExists: false\n      });\n    };\n\n    this.handleResponse = response => {\n      const {\n        message,\n        status\n      } = response.result;\n\n      if (response.status === 200) {\n        switch (status) {\n          case 201:\n            console.log(message);\n            this.setState({\n              message\n            }, clearMessage.bind(this, 3000));\n            break;\n\n          case 409:\n            this.setErrors({\n              exists: message\n            });\n            console.log(message);\n            break;\n\n          case 400:\n            this.setErrors({\n              otherError: message\n            });\n            console.log(message);\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const url = 'http://localhost:5000/add_course';\n      handleSubmit.call(this, url);\n    };\n\n    this.componentDidMount = () => {\n      /**\n       * AFTER RENDER IS DONE FETCH ALL DEPARTMENT AND TEACHER \n       * IN THAT DEPARTMENT\n       */\n\n      /**\n       * setDepartments\n       * \n       * WILL FETCH THE DEPARTMENT AND SET THEM IN THE STORE\n       */\n      this.props.setDepartments().then(() => {\n        // SET A DEFAULT DEPARTMENT IN STATE\n        const defaultDepartment = this.props.departments[0].name;\n        setInputState.call(this, \"data\", \"department\", defaultDepartment);\n        const teacherFilters = {\n          \"department\": defaultDepartment\n        };\n        const teacherProjection = {};\n        /**\n         * setTeachers\n         * \n         * WILL FETCH THE TEACHER AND SET THEM IN THE STORE\n         */\n\n        this.props.setTeachers(teacherFilters, teacherProjection).then(\n        /**\n         *  THIS FUNCTION WILL SET DEFAULT VALUE FOR  \n         *  DEPARTMENT AND TEACHERASSIGNED IN THE STATE \n         */\n        this.setDefaultState);\n      });\n    };\n\n    this.state = {\n      data: {\n        name: \"\",\n        department: \"\",\n        semester: 1,\n        teacherAssigned: \"\"\n      },\n      errorsExists: false,\n      errors: {\n        name: \"\",\n        exists: \"\",\n        otherError: \"\"\n      },\n      message: \"\"\n    };\n  } /////////////////// INPUT HANDLERS /////////////////////////////\n\n\n  applyAuthentication() {\n    const data = this.state.data;\n    return new Promise((resolve, reject) => {\n      if (data.name === '') {\n        this.setErrors({\n          name: \"Fill the box\"\n        });\n      }\n\n      if (data.teacherAssigned === '') {\n        this.setErrors({\n          \"otherError\": \"No Teacher ADDED to the Department\"\n        });\n      }\n\n      resolve();\n    });\n  } /////////////////////// ERROR HANDLERS ENDS ////////////////////////\n  /////////////////////// REQUEST RELATED FUNCTIONS //////////////////////\n\n\n  ////////////////////// LIFE CYCLE FUNCTIONS ENDS /////////////////////////////////\n  render() {\n    const listOfDepartments = this.props.departments;\n    const listOfTeachers = this.props.teachers;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainBody sidePage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, \"Add Course\")), this.state.message && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"confirmationMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 48\n      }\n    }, this.state.message), this.state.errors.otherError && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 58\n      }\n    }, this.state.errors.otherError), this.state.errors.exists && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 54\n      }\n    }, this.state.errors.exists), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, \"Name Of Course\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      placeholder: \"\",\n      value: this.state.data.name,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 41\n      }\n    })), this.state.errors.name && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 64\n      }\n    }, this.state.errors.name))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"department\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 33\n      }\n    }, \"Department\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"department\",\n      name: \"department\",\n      value: this.state.data.department,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, !!listOfDepartments && listOfDepartments.map(department => {\n      const {\n        name\n      } = department;\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: name,\n        value: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 56\n        }\n      }, name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"teacher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 33\n      }\n    }, \"Teacher Assigned\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"teacherAssigned\",\n      name: \"teacher\",\n      value: this.state.data.teacher,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 37\n      }\n    }, !!listOfTeachers && listOfTeachers.map(teacher => {\n      const {\n        name\n      } = teacher;\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: name,\n        value: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 56\n        }\n      }, name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"semester\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 33\n      }\n    }, \"Semester\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"semester\",\n      name: \"semester\" // value={this.state.data.semester}\n      ,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 41\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 41\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 41\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 41\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 41\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 41\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 41\n      }\n    }, \"8\")))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, \"Add Course\")))));\n  }\n\n} ////////////////////// STUFF RELATED TO REDUX STORE /////////////////////\n\n\nconst mapStateToProps = state => {\n  return {\n    departments: state.departments,\n    teachers: state.teachers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTeachers: (filters, projection) => dispatch(getAndSetTeachers(filters, projection)),\n    setDepartments: (filters, projection) => dispatch(getAndSetDepartments(filters, projection))\n  };\n}; ////////////////////// STUFF RELATED TO REDUX STORE ENDS /////////////////////\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCoursePage);","map":{"version":3,"sources":["C:/Users/USER/Downloads/PBL5_Demo/PBL5_Demo/Frontend/src/components/AddCoursePage/AddCoursePage.js"],"names":["React","Component","connect","getAndSetDepartments","getAndSetTeachers","setInputState","handleSubmit","clearMessage","AddCoursePage","constructor","props","onInputChange","e","value","target","name","id","teacherFilters","teacherProjection","setTeachers","then","teacher","teachers","call","setErrors","setDefaultState","console","log","department","departments","teacherAssigned","toUpdate","setState","prevState","errors","errorsExists","clearAllErrors","otherError","exists","handleResponse","response","message","status","result","bind","onSubmit","preventDefault","url","componentDidMount","setDepartments","defaultDepartment","state","data","semester","applyAuthentication","Promise","resolve","reject","render","listOfDepartments","listOfTeachers","map","mapStateToProps","mapDispatchToProps","dispatch","filters","projection"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AAGA,MAAMC,aAAN,SAA4BP,SAA5B,CAAqC;AACjCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAuBlBC,aAvBkB,GAuBDC,CAAD,IAAK;AACjB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,YAAME,IAAI,GAAGH,CAAC,CAACE,MAAF,CAASE,EAAtB,CAFiB,CAGjB;;AACA,UAAGD,IAAI,KAAK,YAAZ,EAAyB;AACrB,cAAME,cAAc,GAAG;AACnB,wBAAcJ;AADK,SAAvB;AAGA,cAAMK,iBAAiB,GAAG,EAA1B;AACA,aAAKR,KAAL,CAAWS,WAAX,CAAuBF,cAAvB,EAAsCC,iBAAtC,EACCE,IADD,CACM,MAAI;AACN,gBAAMC,OAAO,GAAG,KAAKX,KAAL,CAAWY,QAAX,CAAoB,CAApB,CAAhB;AACA;AAChB;AACA;;AACgB,cAAGD,OAAH,EAAW;AACPhB,YAAAA,aAAa,CAACkB,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+B,iBAA/B,EAAiD,KAAKb,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuB,MAAvB,CAAjD;AACH,WAFD,MAEK;AACD;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoBjB,YAAAA,aAAa,CAACkB,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+B,iBAA/B,EAAiD,EAAjD;AACA,iBAAKC,SAAL,CAAe;AACX,4BAAc;AADH,aAAf;AAGH;AACJ,SAvBD;AAwBH;;AAEDnB,MAAAA,aAAa,CAACkB,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+BR,IAA/B,EAAoCF,KAApC;AACH,KA3DiB;;AAAA,SA8DlBY,eA9DkB,GA8DA,MAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACA,YAAMkB,UAAU,GAAG,KAAKlB,KAAL,CAAWmB,WAAX,GAAyB,KAAKnB,KAAL,CAAWmB,WAAX,CAAuB,CAAvB,EAA0B,MAA1B,CAAzB,GAA6D,EAAhF;AACA,YAAMC,eAAe,GAAG,KAAKpB,KAAL,CAAWY,QAAX,GAAsB,KAAKZ,KAAL,CAAWY,QAAX,CAAoB,CAApB,EAAuB,MAAvB,CAAtB,GAAuD,EAA/E;AACAjB,MAAAA,aAAa,CAACkB,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+B,YAA/B,EAA4CK,UAA5C;AACAvB,MAAAA,aAAa,CAACkB,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+B,iBAA/B,EAAiDO,eAAjD;AACH,KApEiB;;AAAA,SA4ElBN,SA5EkB,GA4ELO,QAAD,IAAY;AACpB,WAAKC,QAAL,CAAeC,SAAD,IAAc;AACxB,eAAO;AACHC,UAAAA,MAAM,EAAC,EACH,GAAGD,SAAS,CAACC,MADV;AAEH,eAAGH;AAFA;AADJ,SAAP;AAMH,OAPD;AAQA,WAAKC,QAAL,CAAc;AAACG,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KAtFiB;;AAAA,SAwFlBC,cAxFkB,GAwFD,MAAI;AACjB,WAAKZ,SAAL,CAAe;AACXT,QAAAA,IAAI,EAAE,EADK;AAEXsB,QAAAA,UAAU,EAAE,EAFD;AAGXC,QAAAA,MAAM,EAAE;AAHG,OAAf;AAKA,WAAKN,QAAL,CAAc;AAACG,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KA/FiB;;AAAA,SAoHlBI,cApHkB,GAoHAC,QAAD,IAAY;AACzB,YAAM;AAAEC,QAAAA,OAAF;AAAYC,QAAAA;AAAZ,UAAuBF,QAAQ,CAACG,MAAtC;;AAEA,UAAGH,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,gBAAOA,MAAP;AACI,eAAK,GAAL;AACIhB,YAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACA,iBAAKT,QAAL,CAAc;AACVS,cAAAA;AADU,aAAd,EAEElC,YAAY,CAACqC,IAAb,CAAkB,IAAlB,EAAuB,IAAvB,CAFF;AAGA;;AACJ,eAAK,GAAL;AACI,iBAAKpB,SAAL,CAAe;AACXc,cAAAA,MAAM,EAACG;AADI,aAAf;AAGAf,YAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACA;;AACJ,eAAK,GAAL;AACI,iBAAKjB,SAAL,CAAe;AACXa,cAAAA,UAAU,EAAEI;AADD,aAAf;AAGAf,YAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACA;;AACJ;AACI;AApBR;AAsBH;AACJ,KA/IiB;;AAAA,SAmJlBI,QAnJkB,GAmJNjC,CAAD,IAAK;AACZA,MAAAA,CAAC,CAACkC,cAAF;AAEA,YAAMC,GAAG,GAAG,kCAAZ;AACAzC,MAAAA,YAAY,CAACiB,IAAb,CAAkB,IAAlB,EAAuBwB,GAAvB;AAEH,KAzJiB;;AAAA,SAiKlBC,iBAjKkB,GAiKE,MAAI;AACpB;AACR;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACQ,WAAKtC,KAAL,CAAWuC,cAAX,GACC7B,IADD,CACM,MAAI;AAEN;AACA,cAAM8B,iBAAiB,GAAG,KAAKxC,KAAL,CAAWmB,WAAX,CAAuB,CAAvB,EAA0Bd,IAApD;AACAV,QAAAA,aAAa,CAACkB,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+B,YAA/B,EAA4C2B,iBAA5C;AAEA,cAAMjC,cAAc,GAAG;AACnB,wBAAciC;AADK,SAAvB;AAGA,cAAMhC,iBAAiB,GAAG,EAA1B;AACA;AACZ;AACA;AACA;AACA;;AACY,aAAKR,KAAL,CAAWS,WAAX,CAAuBF,cAAvB,EAAuCC,iBAAvC,EACCE,IADD;AAEI;AAChB;AACA;AACA;AACgB,aAAKK,eANT;AASH,OAzBD;AA0BH,KAtMiB;;AAGd,SAAK0B,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AACFrC,QAAAA,IAAI,EAAE,EADJ;AAEFa,QAAAA,UAAU,EAAE,EAFV;AAGFyB,QAAAA,QAAQ,EAAE,CAHR;AAIFvB,QAAAA,eAAe,EAAE;AAJf,OADG;AAOTK,MAAAA,YAAY,EAAE,KAPL;AAQTD,MAAAA,MAAM,EAAC;AACHnB,QAAAA,IAAI,EAAE,EADH;AAEHuB,QAAAA,MAAM,EAAE,EAFL;AAGHD,QAAAA,UAAU,EAAE;AAHT,OARE;AAaTI,MAAAA,OAAO,EAAE;AAbA,KAAb;AAeH,GAnBgC,CAsBjC;;;AA4EAa,EAAAA,mBAAmB,GAAE;AACjB,UAAMF,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,UAAGL,IAAI,CAACrC,IAAL,KAAc,EAAjB,EAAoB;AAChB,aAAKS,SAAL,CAAe;AAACT,UAAAA,IAAI,EAAE;AAAP,SAAf;AACH;;AACD,UAAGqC,IAAI,CAACtB,eAAL,KAAyB,EAA5B,EAA+B;AAC3B,aAAKN,SAAL,CAAe;AACX,wBAAc;AADH,SAAf;AAGH;;AACDgC,MAAAA,OAAO;AACV,KAVM,CAAP;AAWH,GA/GgC,CAiHjC;AAEA;;;AAsFA;AAEAE,EAAAA,MAAM,GAAG;AACL,UAAMC,iBAAiB,GAAG,KAAKjD,KAAL,CAAWmB,WAArC;AACA,UAAM+B,cAAc,GAAG,KAAKlD,KAAL,CAAWY,QAAlC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAIK,KAAK6B,KAAL,CAAWV,OAAX,iBAAsB;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKU,KAAL,CAAWV,OAAlD,CAJ3B,EAKK,KAAKU,KAAL,CAAWjB,MAAX,CAAkBG,UAAlB,iBAAgC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKc,KAAL,CAAWjB,MAAX,CAAkBG,UAAlD,CALrC,EAMK,KAAKc,KAAL,CAAWjB,MAAX,CAAkBI,MAAlB,iBAA4B;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKa,KAAL,CAAWjB,MAAX,CAAkBI,MAAlD,CANjC,eAOI;AAAM,MAAA,QAAQ,EAAE,KAAKO,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,OADd;AAEI,MAAA,OAAO,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,WAAW,EAAC,EAHhB;AAII,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,IAAX,CAAgBrC,IAJ3B;AAKI,MAAA,QAAQ,EAAE,KAAKJ,aALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAUK,KAAKwC,KAAL,CAAWjB,MAAX,CAAkBnB,IAAlB,iBAA0B;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKoC,KAAL,CAAWjB,MAAX,CAAkBnB,IAAlD,CAV/B,CAPJ,CADJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,YADP;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,KAAK,EAAE,KAAKoC,KAAL,CAAWC,IAAX,CAAgBxB,UAH3B;AAII,MAAA,QAAQ,EAAE,KAAKjB,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOQ,CAAC,CAACgD,iBAAF,IACAA,iBAAiB,CAACE,GAAlB,CAAuBjC,UAAU,IAAG;AAChC,YAAM;AAAEb,QAAAA;AAAF,UAAWa,UAAjB;AACA,0BAAO;AAAQ,QAAA,GAAG,EAAEb,IAAb;AAAmB,QAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCA,IAAjC,CAAP;AACH,KAHD,CARR,CADJ,CAFJ,CArBJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,iBADP;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,KAAK,EAAE,KAAKoC,KAAL,CAAWC,IAAX,CAAgB/B,OAH3B;AAII,MAAA,QAAQ,EAAE,KAAKV,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOQ,CAAC,CAACiD,cAAF,IACAA,cAAc,CAACC,GAAf,CAAoBxC,OAAO,IAAG;AAC1B,YAAM;AAAEN,QAAAA;AAAF,UAAWM,OAAjB;AACA,0BAAO;AAAQ,QAAA,GAAG,EAAEN,IAAb;AAAmB,QAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCA,IAAjC,CAAP;AACH,KAHD,CARR,CADJ,CAFJ,CAxCJ,eA2DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,IAAI,EAAC,UAFT,CAGI;AAHJ;AAII,MAAA,QAAQ,EAAE,KAAKJ,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,eAOI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPJ,eAQI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARJ,eASI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,eAUI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVJ,eAWI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXJ,eAYI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZJ,eAaI;AAAS,MAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbJ,CADJ,CAFJ,CA3DJ,eA+EI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/EJ,CAPJ,CADJ,CADJ,CADJ;AAiGH;;AAhTgC,C,CAmTrC;;;AAEA,MAAMmD,eAAe,GAAIX,KAAD,IAAS;AAC7B,SAAO;AACHtB,IAAAA,WAAW,EAAEsB,KAAK,CAACtB,WADhB;AAEHP,IAAAA,QAAQ,EAAE6B,KAAK,CAAC7B;AAFb,GAAP;AAIH,CALD;;AAOA,MAAMyC,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAM;AACF7C,IAAAA,WAAW,EAAG,CAAC8C,OAAD,EAASC,UAAT,KAAwBF,QAAQ,CAAC5D,iBAAiB,CAAC6D,OAAD,EAASC,UAAT,CAAlB,CAD5C;AAEFjB,IAAAA,cAAc,EAAE,CAACgB,OAAD,EAASC,UAAT,KAAwBF,QAAQ,CAAC7D,oBAAoB,CAAC8D,OAAD,EAASC,UAAT,CAArB;AAF9C,GAAN;AAIH,CALD,C,CAOA;;;AAGA,eAAehE,OAAO,CAAC4D,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CvD,aAA5C,CAAf","sourcesContent":["import React , { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAndSetDepartments } from '../../actions/department';\nimport { getAndSetTeachers } from '../../actions/teachers';\n\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage';\n\n\nclass AddCoursePage extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            data: {\n                name: \"\",\n                department: \"\",\n                semester: 1,\n                teacherAssigned: \"\"\n            },\n            errorsExists: false,\n            errors:{\n                name: \"\",\n                exists: \"\",\n                otherError: \"\"\n            },\n            message: \"\"\n        }\n    }\n\n\n    /////////////////// INPUT HANDLERS /////////////////////////////\n\n    onInputChange = (e)=>{\n        const value = e.target.value;\n        const name = e.target.id;\n        // FETCH ONLY TEACHER OF CORRESPONDING DEPARTMENT\n        if(name === \"department\"){\n            const teacherFilters = {\n                \"department\": value\n            };\n            const teacherProjection = {};\n            this.props.setTeachers(teacherFilters,teacherProjection)\n            .then(()=>{\n                const teacher = this.props.teachers[0]\n                /**\n                 * CHECK IF TEACHER IS EMPTY\n                 */\n                if(teacher){\n                    setInputState.call(this,\"data\",\"teacherAssigned\",this.props.teachers[0]['name'])\n                }else{\n                    /**\n                     * IF THERE IS NOT TEACHER IN THE DEPARTMENT\n                     * WE HAVE TO GIVE AN ERROR\n                     * TO ADD TEACHER IN THE DEPARTMENT FIRST\n                     * \n                     * AND\n                     * \n                     * SET TEACHER TO EMPTY STRING IN data\n                     */\n                    setInputState.call(this,\"data\",\"teacherAssigned\",\"\")\n                    this.setErrors({\n                        \"otherError\": \"No Teacher ADDED to the Department\"\n                    })\n                }\n            })   \n        }\n\n        setInputState.call(this,\"data\",name,value);\n    }\n\n\n    setDefaultState = ()=>{\n        console.log(this.props);\n        const department = this.props.departments ? this.props.departments[0]['name'] : \"\"\n        const teacherAssigned = this.props.teachers ? this.props.teachers[0]['name'] : \"\"\n        setInputState.call(this,\"data\",\"department\",department);\n        setInputState.call(this,\"data\",\"teacherAssigned\",teacherAssigned);\n    }\n\n\n    /////////////////////// INPUT HANDLERS ENDS //////////////////////\n\n\n    /////////////////////// ERROR HANDLERS //////////////////////////\n\n    setErrors = (toUpdate)=>{\n        this.setState((prevState) =>{\n            return {\n                errors:{\n                    ...prevState.errors,\n                    ...toUpdate\n                }\n            }\n        })\n        this.setState({errorsExists: true});\n    }\n\n    clearAllErrors = ()=>{\n        this.setErrors({\n            name: \"\",\n            otherError: \"\",\n            exists: \"\"\n        })\n        this.setState({errorsExists: false});\n    }\n\n    applyAuthentication(){\n        const data = this.state.data; \n        return new Promise((resolve, reject)=>{\n            if(data.name === ''){\n                this.setErrors({name: \"Fill the box\"})\n            }\n            if(data.teacherAssigned === ''){\n                this.setErrors({\n                    \"otherError\": \"No Teacher ADDED to the Department\"\n                })\n            }\n            resolve();\n        })\n    }\n\n    /////////////////////// ERROR HANDLERS ENDS ////////////////////////\n\n    /////////////////////// REQUEST RELATED FUNCTIONS //////////////////////\n\n    handleResponse = (response)=>{\n        const { message , status } = response.result;\n\n        if(response.status === 200){\n            switch(status){\n                case 201:\n                    console.log(message)\n                    this.setState({\n                        message\n                    },clearMessage.bind(this,3000))\n                    break;\n                case 409:\n                    this.setErrors({\n                        exists:message\n                    })\n                    console.log(message)\n                    break;\n                case 400:\n                    this.setErrors({\n                        otherError: message\n                    })\n                    console.log(message)\n                    break;\n                default:\n                    break\n            }\n        }\n    }\n\n    \n\n    onSubmit = (e)=>{\n        e.preventDefault();\n\n        const url = 'http://localhost:5000/add_course';\n        handleSubmit.call(this,url);\n\n    }\n\n\n    /////////////////////// REQUEST RELATED FUNCTIONS ENDS //////////////////////\n    \n\n    ////////////////////// LIFE CYCLE FUNCTIONS /////////////////////////////////\n\n    componentDidMount = ()=>{\n        /**\n         * AFTER RENDER IS DONE FETCH ALL DEPARTMENT AND TEACHER \n         * IN THAT DEPARTMENT\n         */\n\n        /**\n         * setDepartments\n         * \n         * WILL FETCH THE DEPARTMENT AND SET THEM IN THE STORE\n         */\n        this.props.setDepartments()\n        .then(()=>{\n\n            // SET A DEFAULT DEPARTMENT IN STATE\n            const defaultDepartment = this.props.departments[0].name;\n            setInputState.call(this,\"data\",\"department\",defaultDepartment);\n\n            const teacherFilters = {\n                \"department\": defaultDepartment\n            }\n            const teacherProjection = {}\n            /**\n             * setTeachers\n             * \n             * WILL FETCH THE TEACHER AND SET THEM IN THE STORE\n             */\n            this.props.setTeachers(teacherFilters, teacherProjection)\n            .then(\n                /**\n                 *  THIS FUNCTION WILL SET DEFAULT VALUE FOR  \n                 *  DEPARTMENT AND TEACHERASSIGNED IN THE STATE \n                 */\n                this.setDefaultState\n            )\n            \n        })\n    }\n\n    ////////////////////// LIFE CYCLE FUNCTIONS ENDS /////////////////////////////////\n\n    render() {\n        const listOfDepartments = this.props.departments;\n        const listOfTeachers = this.props.teachers;\n\n        return (\n            <div className=\"MainBody sidePage\">\n                <div className=\"Container\">\n                    <div className=\"FormContainer\">\n                        <header>\n                            <h1>Add Course</h1>\n                        </header>\n                        {this.state.message && <span className=\"confirmationMessage\">{this.state.message}</span>}\n                        {this.state.errors.otherError && <span className=\"errorMessage\">{this.state.errors.otherError}</span>}\n                        {this.state.errors.exists && <span className=\"errorMessage\">{this.state.errors.exists}</span>}\n                        <form onSubmit={this.onSubmit}>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"name\"\n                                >\n                                    Name Of Course\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"name\"\n                                            placeholder=\"\"\n                                            value={this.state.data.name}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.name && <span className=\"errorMessage\">{this.state.errors.name}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"Label\" htmlFor=\"department\">Department</label>\n                                <div className=\"selectDiv\">\n                                    <select \n                                        id=\"department\"\n                                        name=\"department\"\n                                        value={this.state.data.department}\n                                        onChange={this.onInputChange}\n                                    >\n                                        {\n                                            !!listOfDepartments &&\n                                            listOfDepartments.map( department =>{\n                                                const { name } = department\n                                                return <option key={name} value={name}>{name}</option>\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"Label\" htmlFor=\"teacher\">Teacher Assigned</label>\n                                <div className=\"selectDiv\">\n                                    <select \n                                        id=\"teacherAssigned\"\n                                        name=\"teacher\"\n                                        value={this.state.data.teacher}\n                                        onChange={this.onInputChange}\n                                    >\n                                        {\n                                            !!listOfTeachers &&\n                                            listOfTeachers.map( teacher =>{\n                                                const { name } = teacher\n                                                return <option key={name} value={name}>{name}</option>\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"Label\" htmlFor=\"semester\">Semester</label>\n                                <div className=\"selectDiv\">\n                                    <select \n                                        id=\"semester\"\n                                        name=\"semester\"\n                                        // value={this.state.data.semester}\n                                        onChange={this.onInputChange}\n                                    >\n                                        <option  value=\"1\">1</option>\n                                        <option  value=\"2\">2</option>\n                                        <option  value=\"3\">3</option>\n                                        <option  value=\"4\">4</option>\n                                        <option  value=\"5\">5</option>\n                                        <option  value=\"6\">6</option>\n                                        <option  value=\"7\">7</option>\n                                        <option  value=\"8\">8</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <button className=\"Button\">\n                                Add Course\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n////////////////////// STUFF RELATED TO REDUX STORE /////////////////////\n\nconst mapStateToProps = (state)=>{\n    return {\n        departments: state.departments,\n        teachers: state.teachers\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        setTeachers : (filters,projection) => dispatch(getAndSetTeachers(filters,projection)),\n        setDepartments: (filters,projection) => dispatch(getAndSetDepartments(filters,projection))\n    }\n}\n\n////////////////////// STUFF RELATED TO REDUX STORE ENDS /////////////////////\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCoursePage);"]},"metadata":{},"sourceType":"module"}