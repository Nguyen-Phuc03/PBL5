{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\PBL5_Demo\\\\PBL5_Demo\\\\Frontend\\\\src\\\\components\\\\SignUpPage\\\\SignUpPage.js\";\nimport React, { Component } from 'react';\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport \"./SignUpPage.scss\"; //*****************************************************************************************\n//*****************************************************************************************\n//*****************************************************************************************\n\n/**\n * NOT SURE THIS IS FULLY ERROR PRONE CHECK BEFORE \n * UPDATING\n */\n//*****************************************************************************************\n//*****************************************************************************************\n//*****************************************************************************************\n\nclass SignUpPage extends Component {\n  constructor(props) {\n    super(props); /////////////////////STATE///////////////////////////////\n\n    this.onInputChange = e => {\n      const value = e.target.value;\n      const name = e.target.id;\n      setInputState.call(this, \"data\", name, value);\n    };\n\n    this.setErrors = toUpdate => {\n      this.setState(prevState => {\n        return {\n          errors: { ...prevState.errors,\n            ...toUpdate\n          }\n        };\n      });\n      this.setState({\n        errorsExists: true\n      });\n    };\n\n    this.clearAllErrors = () => {\n      this.setErrors({\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        otherError: \"\"\n      });\n      this.setState({\n        errorsExists: false\n      });\n    };\n\n    this.handleResponse = response => {\n      if (response['status'] === 200) {\n        const result = response.result;\n\n        switch (result.status) {\n          case 201:\n            this.props.history.push('/login');\n            break;\n\n          case 409:\n            this.setErrors({\n              username: result.message\n            });\n            break;\n\n          case 422:\n            this.setErrors({\n              otherError: result.message\n            });\n            break;\n\n          default:\n            console.log(\"Unknown Response!!\");\n            break;\n        }\n      } else if (response['status'] === 400) {\n        const result = response.result;\n        this.setErrors({\n          otherError: result.message\n        });\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const url = 'http://localhost:5000/signup';\n      handleSubmit.call(this, url);\n    };\n\n    this.state = {\n      data: {\n        username: \"username\",\n        role: \"student\",\n        password: \"\",\n        confirm_password: \"\",\n        remember_me: false\n      },\n      errorsExists: false,\n      errors: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        otherError: \"\"\n      }\n    }; //////////////////////STATE END///////////////////////////\n  } /////////////////////////INPUT HANDLERS////////////////////////////\n\n\n  applyAuthentication() {\n    const user_data = this.state.data;\n    return new Promise((resolve, reject) => {\n      if (user_data.username === '') {\n        this.setErrors({\n          username: \"Fill the box\"\n        });\n      }\n\n      if (user_data.password === '') {\n        this.setErrors({\n          password: \"Fill the box\"\n        });\n      }\n\n      if (user_data.confirm_password === '') {\n        this.setErrors({\n          confirmPassword: \"Fill the box\"\n        });\n      }\n\n      if (user_data['password'] !== user_data['confirm_password']) {\n        this.setErrors({\n          confirmPassword: \"password did not match\"\n        });\n      }\n\n      resolve();\n    });\n  } ///////////////////////ERROR HANDLERS END/////////////////////////////////////\n  ///////////////////////SIGN UP HANDLER////////////////////////////////\n\n\n  /////////////////////SIGNUP HANDLER END////////////////////////////////////\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainBody SignUpMainBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container SignUpContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormContainer SignUpFormContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \" Account SignUp \"), \" \"), \" \", this.state.errors.otherError && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 57\n      }\n    }, \" \", this.state.errors.otherError, \" \"), \" \", /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 136\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, \"USERNAME \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      value: this.state.data.username,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }), \" \"), \" \", this.state.errors.username && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 59\n      }\n    }, \" \", this.state.errors.username, \" \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }\n    }, \"ROLE \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"role\",\n      id: \"role\",\n      value: this.state.data.role,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, \" Student \"), \" \", /*#__PURE__*/React.createElement(\"option\", {\n      value: \"teacher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 79\n      }\n    }, \" Teacher \"), \" \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, \"PASSWORD \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.data.password,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }), \" \"), \" \", this.state.errors.password && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 63\n      }\n    }, \" \", this.state.errors.password, \" \")), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"confirm_password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, \"CONFIRM PASSWORD \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"confirm_password\",\n      value: this.state.data.confirm_password,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }), \" \"), \" \", this.state.errors.confirmPassword && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 74\n      }\n    }, \" \", this.state.errors.confirmPassword, \" \"), \" \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SignUpFooter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"remember-me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"remember_me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"remember_me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, \"Remember Me \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 37\n      }\n    }, \" Account Already Exist ? \"), \"    \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button SignUpButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    }, \"SignUp \"), \" \"), \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["C:/Users/USER/Downloads/PBL5_Demo/PBL5_Demo/Frontend/src/components/SignUpPage/SignUpPage.js"],"names":["React","Component","setInputState","handleSubmit","SignUpPage","constructor","props","onInputChange","e","value","target","name","id","call","setErrors","toUpdate","setState","prevState","errors","errorsExists","clearAllErrors","username","password","confirmPassword","otherError","handleResponse","response","result","status","history","push","message","console","log","onSubmit","preventDefault","url","state","data","role","confirm_password","remember_me","applyAuthentication","user_data","Promise","resolve","reject","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\n\nimport \"./SignUpPage.scss\"\n\n\n//*****************************************************************************************\n//*****************************************************************************************\n//*****************************************************************************************\n\n\n/**\n * NOT SURE THIS IS FULLY ERROR PRONE CHECK BEFORE \n * UPDATING\n */\n//*****************************************************************************************\n//*****************************************************************************************\n//*****************************************************************************************\n\n\n\nclass SignUpPage extends Component {\n    constructor(props) {\n        super(props);\n\n        /////////////////////STATE///////////////////////////////\n        this.state = {\n            data: {\n                username: \"username\",\n                role: \"student\",\n                password: \"\",\n                confirm_password: \"\",\n                remember_me: false,\n            },\n            errorsExists: false,\n            errors: {\n                username: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                otherError: \"\"\n            }\n        }\n\n        //////////////////////STATE END///////////////////////////\n    }\n\n    /////////////////////////INPUT HANDLERS////////////////////////////\n\n    onInputChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.id;\n        setInputState.call(this, \"data\", name, value);\n    }\n\n    ///////////////////////INPUT HANDLERS END//////////////////////////////\n\n\n    ///////////////////////ERRORS HANDLERS//////////////////////////////////\n\n    setErrors = (toUpdate) => {\n        this.setState((prevState) => {\n            return {\n                errors: {\n                    ...prevState.errors,\n                    ...toUpdate\n                }\n            }\n        })\n        this.setState({ errorsExists: true });\n    }\n\n    clearAllErrors = () => {\n        this.setErrors({\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            otherError: \"\"\n        })\n        this.setState({ errorsExists: false });\n    }\n\n\n    applyAuthentication() {\n        const user_data = this.state.data;\n        return new Promise((resolve, reject) => {\n            if (user_data.username === '') {\n                this.setErrors({ username: \"Fill the box\" })\n            }\n            if (user_data.password === '') {\n                this.setErrors({ password: \"Fill the box\" })\n            }\n            if (user_data.confirm_password === '') {\n                this.setErrors({ confirmPassword: \"Fill the box\" })\n            }\n            if (user_data['password'] !== user_data['confirm_password']) {\n                this.setErrors({ confirmPassword: \"password did not match\" })\n            }\n\n            resolve();\n        })\n    }\n\n    ///////////////////////ERROR HANDLERS END/////////////////////////////////////\n\n\n    ///////////////////////SIGN UP HANDLER////////////////////////////////\n\n    handleResponse = (response) => {\n        if (response['status'] === 200) {\n            const result = response.result;\n            switch (result.status) {\n                case 201:\n                    this.props.history.push('/login')\n                    break;\n                case 409:\n                    this.setErrors({ username: result.message })\n                    break;\n                case 422:\n                    this.setErrors({ otherError: result.message })\n                    break;\n                default:\n                    console.log(\"Unknown Response!!\")\n                    break;\n            }\n        } else if (response['status'] === 400) {\n            const result = response.result;\n            this.setErrors({ otherError: result.message })\n        }\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const url = 'http://localhost:5000/signup';\n        handleSubmit.call(this, url);\n    }\n\n    /////////////////////SIGNUP HANDLER END////////////////////////////////////\n\n    render() {\n            return ( <\n                    div className = \"MainBody SignUpMainBody\" >\n                    <\n                    div className = \"Container SignUpContainer\" >\n                    <\n                    div className = \"FormContainer SignUpFormContainer\" >\n                    <\n                    header >\n                    <\n                    h1 > Account SignUp < /h1> <\n                    /header> {\n                        this.state.errors.otherError && < span className = \"errorMessage\" > { this.state.errors.otherError } < /span>} <\n                            form onSubmit = { this.onSubmit } >\n                            <\n                            div >\n                            <\n                            label\n                        className = \"Label\"\n                        htmlFor = \"username\" >\n                            USERNAME <\n                            /label> <\n                            div className = \"inputErrorDiv\" >\n                            <\n                            div className = \"inputDiv\" >\n                            <\n                            input\n                        type = \"text\"\n                        id = \"username\"\n                        value = { this.state.data.username }\n                        onChange = { this.onInputChange }\n                        /> <\n                        /div> {\n                            this.state.errors.username && < span className = \"errorMessage\" > { this.state.errors.username } < /span>} <\n                                /div> <\n                                /div> <\n                                div >\n                                <\n                                label className = \"Label\" >\n                                ROLE <\n                                /label> <\n                                div className = \"selectDiv\" >\n                                <\n                                select\n                            name = \"role\"\n                            id = \"role\"\n                            value = { this.state.data.role }\n                            onChange = { this.onInputChange } >\n                                <\n                                option value = \"student\" > Student < /option> <\n                                option value = \"teacher\" > Teacher < /option> <\n                                /select> <\n                                /div> <\n                                /div> <\n                                div >\n                                <\n                                label\n                            className = \"Label\"\n                            htmlFor = \"password\" >\n                                PASSWORD <\n                                /label> <\n                                div className = \"inputErrorDiv\" >\n                                <\n                                div className = \"inputDiv\" >\n                                <\n                                input\n                            type = \"password\"\n                            id = \"password\"\n                            value = { this.state.data.password }\n                            onChange = { this.onInputChange }\n                            /> <\n                            /div> {\n                                this.state.errors.password && < span className = \"errorMessage\" > { this.state.errors.password } < /span>}\n\n                                <\n                                /div> <\n                                /div> <\n                                div >\n                                    <\n                                    label\n                                className = \"Label\"\n                                htmlFor = \"confirm_password\" >\n                                    CONFIRM PASSWORD <\n                                    /label> <\n                                    div className = \"inputErrorDiv\" >\n                                    <\n                                    div className = \"inputDiv\" >\n                                    <\n                                    input\n                                type = \"password\"\n                                id = \"confirm_password\"\n                                value = { this.state.data.confirm_password }\n                                onChange = { this.onInputChange }\n                                /> <\n                                /div> {\n                                    this.state.errors.confirmPassword && < span className = \"errorMessage\" > { this.state.errors.confirmPassword } < /span>} <\n                                        /div> <\n                                        /div>\n\n                                    <\n                                    div className = \"SignUpFooter\" >\n                                        <\n                                        div className = \"remember-me\" >\n                                        <\n                                        input\n                                    type = \"checkbox\"\n                                    id = \"remember_me\" /\n                                        >\n                                        <\n                                        label\n                                    htmlFor = \"remember_me\" >\n                                        Remember Me <\n                                        /label> <\n                                        /div>\n\n                                    <\n                                    div > Account Already Exist ? < /div>    <\n                                        /div>\n\n                                    <\n                                    button className = \"Button SignUpButton\" >\n                                        SignUp <\n                                        /button> <\n                                        /form> <\n                                        /div> <\n                                        /div> <\n                                        /div>\n                                )\n                            }\n                        }\n\n                        export default SignUpPage;"]},"metadata":{},"sourceType":"module"}