{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Reactjs\\\\PBL5_Demo\\\\Frontend\\\\src\\\\components\\\\AddStudentPage\\\\StudentComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './_studentComponents.scss';\nimport { startUpdateStudent } from '../../actions/students'; // import teacherReducer from '../../reducers/teachers';\n\nclass StudentComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onButtonClick = e => {\n      console.log(e);\n      console.log(this.props.isConfirmed);\n      const whomToUpdate = this.props.username;\n      const whatToUpdate = {\n        \"confirmed\": !this.props.isConfirmed\n      };\n      this.props.updataTeacher(whomToUpdate, whatToUpdate);\n    };\n  }\n\n  render() {\n    const {\n      username,\n      name,\n      department,\n      semester,\n      isConfirmed\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `Component_Body ${isConfirmed ? \"\" : \"Component_notConfirmed\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Component_Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Component_Data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, username, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, \"(\", name, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, department, \"-\", semester)), (() => {\n      if (!isConfirmed) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.onButtonClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 44\n          }\n        }, \"Confirm\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.onButtonClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }\n        }, \"Unconfirmed\");\n      }\n    })())));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updataTeacher: (whomToUpdate, whatToUpdate) => dispatch(startUpdateStudent(whomToUpdate, whatToUpdate))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(StudentComponent);","map":{"version":3,"sources":["E:/Documents/Reactjs/PBL5_Demo/Frontend/src/components/AddStudentPage/StudentComponent.js"],"names":["React","Component","connect","startUpdateStudent","StudentComponent","onButtonClick","e","console","log","props","isConfirmed","whomToUpdate","username","whatToUpdate","updataTeacher","render","name","department","semester","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,2BAAP;AACA,SAASC,kBAAT,QAAmC,wBAAnC,C,CACA;;AAGA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SASrCI,aATqC,GASpBC,CAAD,IAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,WAAvB;AACA,YAAMC,YAAY,GAAG,KAAKF,KAAL,CAAWG,QAAhC;AACA,YAAMC,YAAY,GAAG;AACjB,qBAAc,CAAC,KAAKJ,KAAL,CAAWC;AADT,OAArB;AAGA,WAAKD,KAAL,CAAWK,aAAX,CAAyBH,YAAzB,EAAsCE,YAAtC;AACH,KAjBoC;AAAA;;AAmBrCE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA,QAAF;AAAWI,MAAAA,IAAX;AAAiBC,MAAAA,UAAjB;AAA6BC,MAAAA,QAA7B;AAAwCR,MAAAA;AAAxC,QAAuD,KAAKD,KAAlE;AACA,wBACI;AAAK,MAAA,SAAS,EAAG,kBAAiBC,WAAW,GAAG,EAAH,GAAQ,wBAAyB,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,QADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMI,IADN,MAFJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,UAAL,OAAkBC,QAAlB,CADJ,CAPJ,EAWQ,CAAC,MAAI;AACD,UAAG,CAACR,WAAJ,EAAgB;AACZ,4BAAO;AAAQ,UAAA,OAAO,EAAE,KAAKL,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,OAFD,MAEK;AACD,4BAAO;AAAQ,UAAA,OAAO,EAAE,KAAKA,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;AACJ,KAND,GAXR,CADJ,CADJ,CADJ;AA0BH;;AA/CoC;;AAkDzC,MAAMc,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAO;AACHN,IAAAA,aAAa,EAAG,CAACH,YAAD,EAAcE,YAAd,KAA8BO,QAAQ,CAACjB,kBAAkB,CAACQ,YAAD,EAAcE,YAAd,CAAnB;AADnD,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCf,gBAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './_studentComponents.scss';\nimport { startUpdateStudent } from '../../actions/students';\n// import teacherReducer from '../../reducers/teachers';\n\n\nclass StudentComponent extends Component {\n//     constructor(props){\n//         super(props);\n\n//         this.state = {\n//             \"teachersName\": teachersName,\n//             \"isConfirmed\" : isConfirmed\n//         }\n//     }\n    onButtonClick = (e) =>{\n        console.log(e)\n        console.log(this.props.isConfirmed)\n        const whomToUpdate = this.props.username;\n        const whatToUpdate = {\n            \"confirmed\": (!this.props.isConfirmed)\n        }\n        this.props.updataTeacher(whomToUpdate,whatToUpdate)\n    }\n\n    render() {\n        const { username,name, department, semester , isConfirmed} = this.props\n        return (\n            <div className={`Component_Body ${isConfirmed ? \"\" : \"Component_notConfirmed\"}`}>\n                <div className=\"Component_Container\">\n                    <div className=\"Component_Data\">\n                        <h2>\n                            {username}\n                            <span>\n                                ({name})\n                            </span>\n                        </h2>\n                        <div>\n                            <h3>{department}-{semester}</h3>\n                        </div>\n                        {\n                            (()=>{\n                                if(!isConfirmed){\n                                    return <button onClick={this.onButtonClick}>Confirm</button>\n                                }else{\n                                    return <button onClick={this.onButtonClick}>Unconfirmed</button>\n                                }\n                            })()\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        updataTeacher : (whomToUpdate,whatToUpdate)=> dispatch(startUpdateStudent(whomToUpdate,whatToUpdate))\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(StudentComponent);"]},"metadata":{},"sourceType":"module"}