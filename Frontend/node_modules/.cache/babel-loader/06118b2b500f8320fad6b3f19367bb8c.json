{"ast":null,"code":"const addCourse = course => {\n  return {\n    type: \"ADD_COURSE\",\n    course\n  };\n};\n\nconst clearCourse = () => {\n  return {\n    type: \"CLEAR_COURSES\"\n  };\n}; // Getting From Database and Setting in Redux Store\n\n\nconst getAndSetCourses = (filters = {}, projection = {}) => {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      fetch('http://localhost:5000/get_all_courses', {\n        method: ['POST'],\n        body: JSON.stringify({\n          filters,\n          projection\n        })\n      }).then(response => response.json()).then(response => {\n        dispatch(clearCourse());\n        response.allCourses.forEach(course => {\n          dispatch(addCourse(course));\n        });\n        resolve();\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  };\n};\n\nexport default getAndSetCourses;","map":{"version":3,"sources":["E:/Documents/Reactjs/PBL5_Demo/Frontend/src/actions/courses.js"],"names":["addCourse","course","type","clearCourse","getAndSetCourses","filters","projection","dispatch","Promise","resolve","reject","fetch","method","body","JSON","stringify","then","response","json","allCourses","forEach","catch","error"],"mappings":"AAAA,MAAMA,SAAS,GAAIC,MAAD,IAAU;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAME,WAAW,GAAG,MAAI;AACpB,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD,C,CAKA;;;AAEA,MAAME,gBAAgB,GAAG,CAACC,OAAO,GAAC,EAAT,EAAYC,UAAU,GAAC,EAAvB,KAA4B;AACjD,SAAQC,QAAD,IAAY;AACf,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACjCC,MAAAA,KAAK,CAAC,uCAAD,EAAyC;AAC1CC,QAAAA,MAAM,EAAE,CAAC,MAAD,CADkC;AAE1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBV,UAAAA,OADiB;AAEjBC,UAAAA;AAFiB,SAAf;AAFoC,OAAzC,CAAL,CAOCU,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMC,QAAQ,IAAI;AACdV,QAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACAc,QAAAA,QAAQ,CAACE,UAAT,CAAoBC,OAApB,CAA4BnB,MAAM,IAAI;AAClCM,UAAAA,QAAQ,CAACP,SAAS,CAACC,MAAD,CAAV,CAAR;AACH,SAFD;AAGAQ,QAAAA,OAAO;AACV,OAdD,EAeCY,KAfD,CAeOC,KAAK,IAAI;AACZZ,QAAAA,MAAM,CAACY,KAAD,CAAN;AACH,OAjBD;AAkBH,KAnBM,CAAP;AAoBH,GArBD;AAsBH,CAvBD;;AAyBA,eAAelB,gBAAf","sourcesContent":["const addCourse = (course)=>{\n    return {\n        type: \"ADD_COURSE\",\n        course\n    }\n}\n\nconst clearCourse = ()=>{\n    return {\n        type: \"CLEAR_COURSES\"\n    }\n}\n// Getting From Database and Setting in Redux Store\n\nconst getAndSetCourses = (filters={},projection={})=>{\n    return (dispatch)=>{\n        return new Promise((resolve,reject)=>{\n            fetch('http://localhost:5000/get_all_courses',{\n                method: ['POST'],\n                body: JSON.stringify({\n                    filters,\n                    projection\n                })\n            })\n            .then(response => response.json())\n            .then(response => {\n                dispatch(clearCourse());\n                response.allCourses.forEach(course => {\n                    dispatch(addCourse(course))\n                });\n                resolve();\n            })\n            .catch(error => {\n                reject(error);\n            })\n        })\n    }\n}\n\nexport default getAndSetCourses;"]},"metadata":{},"sourceType":"module"}