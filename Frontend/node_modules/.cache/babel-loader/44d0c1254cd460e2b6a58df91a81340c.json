{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Reactjs\\\\PBL5_Demo\\\\Frontend\\\\src\\\\components\\\\AddTeacherPage\\\\AddTeacherPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAndSetTeachers } from '../../actions/teachers';\nimport TeacherComponent from './TeacherComponent';\nimport { getAndSetDepartments } from '../../actions/department';\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage'; // import './_addTeacherPage.scss';\n\nclass AddTeacherPage extends Component {\n  constructor(props) {\n    super(props); // console.log(\"CALLED\")\n\n    this.onInputChange = e => {\n      const value = e.target.value;\n      const name = e.target.id;\n      setInputState.call(this, \"data\", name, value);\n    };\n\n    this.setErrors = toUpdate => {\n      this.setState(prevState => {\n        return {\n          errors: { ...prevState.errors,\n            ...toUpdate\n          }\n        };\n      });\n      this.setState({\n        errorsExists: true\n      });\n    };\n\n    this.clearAllErrors = () => {\n      this.setErrors({\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        otherError: \"\",\n        confirmPassword: \"\",\n        exists: \"\"\n      });\n      this.setState({\n        errorsExists: false\n      });\n    };\n\n    this.handleResponse = response => {\n      const {\n        message,\n        status\n      } = response.result;\n\n      if (response.status === 200) {\n        switch (status) {\n          case 201:\n            console.log(message);\n            this.setState({\n              message\n            }, clearMessage.bind(this, 3000));\n            this.props.setTeachers();\n            break;\n\n          case 409:\n            this.setErrors({\n              exists: message\n            });\n            console.log(message);\n            break;\n\n          case 400:\n            this.setErrors({\n              otherError: message\n            });\n            console.log(message);\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const url = \"http://localhost:5000/signup\";\n      handleSubmit.call(this, url);\n    };\n\n    this.setDefaultState = () => {\n      const department = this.props.departments[0]['name'];\n      setInputState.call(this, \"data\", \"department\", department);\n    };\n\n    this.componentDidMount = () => {\n      /***********************************************************/\n\n      /* \n          FOR NOW I WILL FETCH ALL TEACHERS\n          IN FUTURE I WILL FETCH FOR  A PARTICULAR SEMESTER AND DEPARTMENT\n      */\n      this.props.setTeachers();\n      this.props.setDepartments().then(() => {\n        this.setDefaultState();\n      });\n    };\n\n    this.state = {\n      data: {\n        username: \"\",\n        name: \"\",\n        department: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        \"role\": \"teacher\",\n        \"confirmed\": true\n      },\n      errorsExists: false,\n      errors: {\n        username: \"\",\n        password: \"\",\n        name: \"\",\n        confirmPassword: \"\",\n        exists: \"\",\n        otherError: \"\"\n      },\n      message: \"\"\n    };\n  } /////////////////////   INPUT HANDLERS ///////////////////////////\n\n\n  applyAuthentication() {\n    const data = this.state.data;\n    return new Promise((resolve, reject) => {\n      if (data.username === '') {\n        this.setErrors({\n          username: \"Fill the box\"\n        });\n      }\n\n      if (data.password === '') {\n        this.setErrors({\n          password: \"Fill the box\"\n        });\n      }\n\n      if (data.name === '') {\n        this.setErrors({\n          name: \"Fill the box\"\n        });\n      }\n\n      if (data.confirmPassword === '') {\n        this.setErrors({\n          confirmPassword: \"Fill the box\"\n        });\n      } else if (data['password'] !== data['confirmPassword']) {\n        this.setErrors({\n          confirmPassword: \"password did not match\"\n        });\n      }\n\n      resolve();\n    });\n  } /////////////////////   ERRORS HANDLERS ENDS ///////////////////////////\n  //////////////////////  REQUEST RELATED FUNCTONS ///////////////////////////\n\n\n  ///////////////////// LIFE CYCLE FUNCTION ENDS ////////////////////////////////////////\n  render() {\n    const listOfTeachers = this.props.teachers;\n    const listOfDepartments = this.props.departments;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainBody AddTeacher_MainBody sidePage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container AddTeacher_Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormContainer AddTeacher_FormContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, \"Add Teacher\")), this.state.message && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"confirmationMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 48\n      }\n    }, this.state.message), this.state.errors.exists && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 54\n      }\n    }, this.state.errors.exists), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, \"Username Of Teacher\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      placeholder: \"\",\n      value: this.state.data.username,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    })), this.state.errors.username && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 68\n      }\n    }, this.state.errors.username))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, \"Name Of Teacher\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      placeholder: \"\",\n      value: this.state.data.name,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 41\n      }\n    })), this.state.errors.name && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 64\n      }\n    }, this.state.errors.name))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"department\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, \"Department\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"department\",\n      name: \"department\",\n      value: this.state.data.department,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }\n    }, !!listOfDepartments && listOfDepartments.map(department => {\n      const {\n        name\n      } = department;\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: name,\n        value: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 56\n        }\n      }, name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      value: this.state.data.password,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    })), this.state.errors.password && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 68\n      }\n    }, this.state.errors.password))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"confirmPassword\",\n      placeholder: \"\",\n      value: this.state.data.confirmPassword,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    })), this.state.errors.confirmPassword && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 75\n      }\n    }, this.state.errors.confirmPassword))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, \"Add Teacher\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ListBlock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    }, \" All Teachers \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, listOfTeachers.map(teacher => {\n      const {\n        username,\n        name,\n        confirmed\n      } = teacher;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(TeacherComponent, {\n        username: username,\n        name: name,\n        isConfirmed: confirmed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 59\n        }\n      }));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    teachers: state.teachers,\n    departments: state.departments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTeachers: (filters, projection) => dispatch(getAndSetTeachers(filters, projection)),\n    setDepartments: (filters, projection) => dispatch(getAndSetDepartments(filters, projection))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTeacherPage);","map":{"version":3,"sources":["E:/Documents/Reactjs/PBL5_Demo/Frontend/src/components/AddTeacherPage/AddTeacherPage.js"],"names":["React","Component","connect","getAndSetTeachers","TeacherComponent","getAndSetDepartments","setInputState","handleSubmit","clearMessage","AddTeacherPage","constructor","props","onInputChange","e","value","target","name","id","call","setErrors","toUpdate","setState","prevState","errors","errorsExists","clearAllErrors","username","password","otherError","confirmPassword","exists","handleResponse","response","message","status","result","console","log","bind","setTeachers","onSubmit","preventDefault","url","setDefaultState","department","departments","componentDidMount","setDepartments","then","state","data","applyAuthentication","Promise","resolve","reject","render","listOfTeachers","teachers","listOfDepartments","map","teacher","confirmed","mapStateToProps","mapDispatchToProps","dispatch","filters","projection"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport { getAndSetTeachers } from '../../actions/teachers'; \n\nimport TeacherComponent from './TeacherComponent';\nimport { getAndSetDepartments } from '../../actions/department';\n\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage';\n\n// import './_addTeacherPage.scss';\nclass AddTeacherPage extends Component{\n    constructor(props){\n        super(props);\n\n        \n        // console.log(\"CALLED\")\n\n        this.state = {\n            data: {\n                username: \"\",\n                name: \"\",\n                department: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                \"role\": \"teacher\",\n                \"confirmed\": true\n            },\n            errorsExists: false,\n            errors:{\n                username: \"\",\n                password: \"\",\n                name: \"\",\n                confirmPassword: \"\",\n                exists: \"\",\n                otherError: \"\"\n            },\n            message: \"\"\n        }\n    }\n\n    /////////////////////   INPUT HANDLERS ///////////////////////////\n\n    onInputChange = (e)=>{\n        const value = e.target.value;\n        const name = e.target.id;\n        setInputState.call(this,\"data\",name,value);\n    }\n\n    /////////////////////   INPUT HANDLERS ENDS ///////////////////////////\n\n\n\n    /////////////////////   ERRORS HANDLERS ///////////////////////////\n\n\n    setErrors = (toUpdate)=>{\n        this.setState((prevState) =>{\n            return {\n                errors:{\n                    ...prevState.errors,\n                    ...toUpdate\n                }\n            }\n        })\n        this.setState({errorsExists: true});\n    }\n\n    clearAllErrors = ()=>{\n        this.setErrors({\n            username: \"\",\n            password: \"\",\n            name: \"\",\n            otherError: \"\",\n            confirmPassword: \"\",\n            exists: \"\"\n        })\n        this.setState({errorsExists: false});\n    }\n\n\n    applyAuthentication(){\n        const data = this.state.data;\n        return new Promise((resolve, reject)=>{\n            if(data.username === ''){\n                this.setErrors({username: \"Fill the box\"})\n            }\n            if(data.password === ''){\n                this.setErrors({password: \"Fill the box\"})\n            }\n            if(data.name === ''){\n                this.setErrors({name: \"Fill the box\"})\n            }\n            if(data.confirmPassword === ''){\n                this.setErrors({confirmPassword: \"Fill the box\"})\n            }else if(data['password'] !== data['confirmPassword']){\n                this.setErrors({confirmPassword: \"password did not match\"})\n            }\n            resolve();\n        })\n\n    }\n\n    /////////////////////   ERRORS HANDLERS ENDS ///////////////////////////\n\n\n\n    //////////////////////  REQUEST RELATED FUNCTONS ///////////////////////////\n\n    handleResponse = (response)=>{\n        const { message , status } = response.result;\n\n        if(response.status === 200){\n            switch(status){\n                case 201:\n                    console.log(message)\n                    this.setState({\n                        message\n                    },clearMessage.bind(this,3000))\n                    this.props.setTeachers();\n                    break;\n                case 409:\n                    this.setErrors({\n                        exists:message\n                    })\n                    console.log(message)\n                    break;\n                case 400:\n                    this.setErrors({\n                        otherError: message\n                    })\n                    console.log(message)\n                    break;\n                default:\n                    break\n            }\n        }\n    }\n\n\n    onSubmit = (e)=>{\n        e.preventDefault();\n\n        const url = \"http://localhost:5000/signup\";\n        handleSubmit.call(this,url);\n    }\n\n    //////////////////////  REQUEST RELATED FUNCTONS ENDS ///////////////////////////\n\n\n    ///////////////////// LIFE CYCLE FUNCTION ////////////////////////////////////////\n\n    setDefaultState = ()=>{\n        const department = this.props.departments[0]['name']\n        setInputState.call(this,\"data\",\"department\",department);\n    }\n    \n    componentDidMount = ()=>{\n        /***********************************************************/\n        /* \n            FOR NOW I WILL FETCH ALL TEACHERS\n            IN FUTURE I WILL FETCH FOR  A PARTICULAR SEMESTER AND DEPARTMENT\n        */\n       this.props.setTeachers()\n       this.props.setDepartments()\n       .then(()=>{this.setDefaultState()})\n    }\n\n    ///////////////////// LIFE CYCLE FUNCTION ENDS ////////////////////////////////////////\n\n\n    render() {\n        const listOfTeachers = this.props.teachers;\n        const listOfDepartments = this.props.departments;\n\n        return (\n            <div className=\"MainBody AddTeacher_MainBody sidePage\">\n                <div className=\"Container AddTeacher_Container\">\n                    <div className=\"FormContainer AddTeacher_FormContainer\">\n                        <header>\n                            <h1>Add Teacher</h1>\n                        </header>\n                        {this.state.message && <span className=\"confirmationMessage\">{this.state.message}</span>}\n                        {this.state.errors.exists && <span className=\"errorMessage\">{this.state.errors.exists}</span>}\n                        <form onSubmit={this.onSubmit}>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"username\"\n                                >\n                                    Username Of Teacher\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"username\"\n                                            placeholder=\"\"\n                                            value={this.state.data.username}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.username && <span className=\"errorMessage\">{this.state.errors.username}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"name\"\n                                >\n                                    Name Of Teacher\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"name\"\n                                            placeholder=\"\"\n                                            value={this.state.data.name}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.name && <span className=\"errorMessage\">{this.state.errors.name}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"Label\" htmlFor=\"department\">Department</label>\n                                <div className=\"selectDiv\">\n                                    <select \n                                        id=\"department\"\n                                        name=\"department\"\n                                        value={this.state.data.department}\n                                        onChange={this.onInputChange}\n                                    >\n                                        {   !!listOfDepartments &&\n                                            listOfDepartments.map( department =>{\n                                                const { name } = department\n                                                return <option key={name} value={name}>{name}</option>\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"password\"\n                                >\n                                    Password\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"password\"\n                                            id=\"password\"\n                                            placeholder=\"\"\n                                            value={this.state.data.password}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.password && <span className=\"errorMessage\">{this.state.errors.password}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"confirmPassword\"\n                                >\n                                    Confirm Password\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"password\"\n                                            id=\"confirmPassword\"\n                                            placeholder=\"\"\n                                            value={this.state.data.confirmPassword}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.confirmPassword && <span className=\"errorMessage\">{this.state.errors.confirmPassword}</span>}\n                                </div>\n                            </div>\n                            <button className=\"Button\">\n                                Add Teacher\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"ListBlock\">\n                    <header>\n                        <h2> All Teachers </h2>\n                    </header>\n                    <div className=\"MainContainer\">\n                        <ol>\n                            {\n                                listOfTeachers.map(teacher =>{\n                                    const {username,name, confirmed} = teacher \n                                    return <li key={name}><TeacherComponent username={username} name={name} isConfirmed={confirmed} /></li>\n                                })\n                            }\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state)=>{\n    return {\n        teachers: state.teachers,\n        departments: state.departments\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        setTeachers : (filters,projection) => dispatch(getAndSetTeachers(filters,projection)),\n        setDepartments: (filters,projection) => dispatch(getAndSetDepartments(filters,projection))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddTeacherPage);"]},"metadata":{},"sourceType":"module"}