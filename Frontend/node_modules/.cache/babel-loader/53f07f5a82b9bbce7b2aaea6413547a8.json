{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Reactjs\\\\PBL5_Demo\\\\Frontend\\\\src\\\\components\\\\AddStudentPage\\\\AddStudentPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAndSetStudents } from '../../actions/students';\nimport StudentComponent from './StudentComponent';\nimport { getAndSetDepartments } from '../../actions/department';\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage'; // import './_addStudentPage.scss';\n\nclass AddStudentPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = e => {\n      const value = e.target.value;\n      const name = e.target.id;\n      console.log(value, name);\n      setInputState.call(this, \"data\", name, value);\n    };\n\n    this.setErrors = toUpdate => {\n      this.setState(prevState => {\n        return {\n          errors: { ...prevState.errors,\n            ...toUpdate\n          }\n        };\n      });\n      this.setState({\n        errorsExists: true\n      });\n    };\n\n    this.clearAllErrors = () => {\n      this.setErrors({\n        username: \"\",\n        name: \"\",\n        roll_no: \"\",\n        password: \"\",\n        otherError: \"\",\n        confirmPassword: \"\",\n        exists: \"\"\n      });\n      this.setState({\n        errorsExists: false\n      });\n    };\n\n    this.handleResponse = response => {\n      const {\n        message,\n        status\n      } = response.result;\n\n      if (response.status === 200) {\n        switch (status) {\n          case 201:\n            this.setState({\n              message\n            }, clearMessage.bind(this, 3000));\n            this.props.setStudents();\n            break;\n\n          case 409:\n            this.setErrors({\n              exists: message\n            });\n            break;\n\n          case 400:\n            this.setErrors({\n              otherError: message\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const url = 'http://localhost:5000/signup';\n      handleSubmit.call(this, url);\n    };\n\n    this.setDefaultState = () => {\n      const department = this.props.departments[0]['name'];\n      setInputState.call(this, \"data\", \"department\", department);\n    };\n\n    this.componentDidMount = () => {\n      /***********************************************************/\n\n      /* \n          FOR NOW I WILL FETCH ALL STUDENT \n          IN FUTURE I WILL FETCH FOR  A PARTICULAR COURSE AND DEPARTMENT\n      */\n      this.props.setStudents();\n      this.props.setDepartments().then(() => {\n        this.setDefaultState();\n      });\n    };\n\n    this.state = {\n      data: {\n        username: \"\",\n        name: \"\",\n        roll_no: \"\",\n        department: \"\",\n        semester: 1,\n        password: \"\",\n        confirmPassword: \"\",\n        \"role\": \"student\",\n        \"confirmed\": true\n      },\n      errorsExists: false,\n      errors: {\n        username: \"\",\n        name: \"\",\n        roll_no: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        exists: \"\",\n        otherError: \"\"\n      },\n      message: \"\"\n    };\n  } /////////////////////// INPUT HANDLER /////////////////////////////////\n\n\n  applyAuthentication() {\n    const data = this.state.data;\n    return new Promise((resolve, reject) => {\n      if (data.username === '') {\n        this.setErrors({\n          username: \"Fill the box\"\n        });\n      }\n\n      if (data.name === '') {\n        this.setErrors({\n          name: \"Fill the box\"\n        });\n      }\n\n      if (data.roll_no === '') {\n        this.setErrors({\n          roll_no: \"Fill the box\"\n        });\n      }\n\n      if (data.password === '') {\n        this.setErrors({\n          password: \"Fill the box\"\n        });\n      }\n\n      if (data.confirmPassword === '') {\n        this.setErrors({\n          confirmPassword: \"Fill the box\"\n        });\n      } else if (data['password'] !== data['confirmPassword']) {\n        this.setErrors({\n          confirmPassword: \"password did not match\"\n        });\n      }\n\n      resolve();\n    });\n  } /////////////////////// ERROR HANDLERS ENDS //////////////////////////////////\n  //////////////////////  REQUEST RELATED FUNCTONS ///////////////////////////\n\n\n  ///////////////////// LIFE CYCLE FUNCTION ENDS ////////////////////////////////////////\n  render() {\n    const listOfStudents = this.props.students;\n    const listOfDepartments = this.props.departments;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainBody sidePage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"Add Student\")), this.state.message && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"confirmationMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 48\n      }\n    }, this.state.message), this.state.errors.exists && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 54\n      }\n    }, this.state.errors.exists), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, \"Username Of Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      placeholder: \"\",\n      value: this.state.data.username,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    })), this.state.errors.username && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 68\n      }\n    }, this.state.errors.username))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }, \"Name Of Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      placeholder: \"\",\n      value: this.state.data.name,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }\n    })), this.state.errors.name && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 64\n      }\n    }, this.state.errors.name))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"roll_no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, \"Roll Number Of Student\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"roll_no\",\n      placeholder: \"\",\n      value: this.state.data.roll_no,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    })), this.state.errors.roll_no && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 67\n      }\n    }, this.state.errors.roll_no))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"department\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"Department\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"department\",\n      name: \"department\",\n      value: this.state.data.department,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }, !!listOfDepartments && listOfDepartments.map(department => {\n      const {\n        name\n      } = department;\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: name,\n        value: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 56\n        }\n      }, name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"semester\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"Semester\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"semester\",\n      name: \"semester\",\n      value: this.state.data.semester,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 41\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 41\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 41\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 41\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 41\n      }\n    }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 41\n      }\n    }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 41\n      }\n    }, \"8\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 33\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      value: this.state.data.password,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 41\n      }\n    })), this.state.errors.password && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 68\n      }\n    }, this.state.errors.password))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"Label\",\n      htmlFor: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputErrorDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"confirmPassword\",\n      placeholder: \"\",\n      value: this.state.data.confirmPassword,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 41\n      }\n    })), this.state.errors.confirmPassword && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 75\n      }\n    }, this.state.errors.confirmPassword))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 29\n      }\n    }, \"Add Student\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ListBlock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, \" All Students \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 25\n      }\n    }, !!listOfStudents && listOfStudents.map(student => {\n      const {\n        username,\n        name,\n        department,\n        semester,\n        confirmed\n      } = student;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(StudentComponent, {\n        username: username,\n        name: name,\n        department: department,\n        semester: semester,\n        isConfirmed: confirmed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 49\n        }\n      }));\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    students: state.students,\n    departments: state.departments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStudents: (filters, projection) => dispatch(getAndSetStudents(filters, projection)),\n    setDepartments: (filters, projection) => dispatch(getAndSetDepartments(filters, projection))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddStudentPage);","map":{"version":3,"sources":["E:/Documents/Reactjs/PBL5_Demo/Frontend/src/components/AddStudentPage/AddStudentPage.js"],"names":["React","Component","connect","getAndSetStudents","StudentComponent","getAndSetDepartments","setInputState","handleSubmit","clearMessage","AddStudentPage","constructor","props","onInputChange","e","value","target","name","id","console","log","call","setErrors","toUpdate","setState","prevState","errors","errorsExists","clearAllErrors","username","roll_no","password","otherError","confirmPassword","exists","handleResponse","response","message","status","result","bind","setStudents","onSubmit","preventDefault","url","setDefaultState","department","departments","componentDidMount","setDepartments","then","state","data","semester","applyAuthentication","Promise","resolve","reject","render","listOfStudents","students","listOfDepartments","map","student","confirmed","mapStateToProps","mapDispatchToProps","dispatch","filters","projection"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport { getAndSetStudents } from '../../actions/students'; \n\nimport StudentComponent from './StudentComponent';\nimport { getAndSetDepartments } from '../../actions/department';\n\nimport setInputState from '../../genericFunctions/setInputState';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage';\n// import './_addStudentPage.scss';\n\nclass AddStudentPage extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            data: {\n                username: \"\",\n                name: \"\",\n                roll_no: \"\",\n                department: \"\",\n                semester: 1,\n                password: \"\",\n                confirmPassword: \"\",\n                \"role\": \"student\",\n                \"confirmed\": true\n            },\n            errorsExists: false,\n            errors:{\n                username: \"\",\n                name: \"\",\n                roll_no: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                exists: \"\",\n                otherError: \"\"\n            },\n            message: \"\"\n        }\n    }\n\n    /////////////////////// INPUT HANDLER /////////////////////////////////\n\n    onInputChange = (e)=>{\n        const value = e.target.value;\n        const name = e.target.id;\n        console.log(value,name);\n        setInputState.call(this,\"data\",name,value)\n    }\n    /////////////////////// INPUT HANDLER ENDS /////////////////////////////////\n\n\n    /////////////////////// ERROR HANDLERS //////////////////////////////////\n\n    setErrors = (toUpdate)=>{\n        this.setState((prevState) =>{\n            return {\n                errors:{\n                    ...prevState.errors,\n                    ...toUpdate\n                }\n            }\n        })\n        this.setState({errorsExists: true});\n    }\n\n    clearAllErrors = ()=>{\n        this.setErrors({\n            username: \"\",\n            name: \"\",\n            roll_no: \"\",\n            password: \"\",\n            otherError: \"\",\n            confirmPassword: \"\",\n            exists: \"\"\n        })\n        this.setState({errorsExists: false});\n    }\n\n\n    applyAuthentication(){\n        const data = this.state.data;\n\n        return new Promise((resolve,reject)=>{\n            if(data.username === ''){\n                this.setErrors({username: \"Fill the box\"})\n            }\n            if(data.name === ''){\n                this.setErrors({name: \"Fill the box\"})\n            }\n            if(data.roll_no === ''){\n                this.setErrors({roll_no: \"Fill the box\"})\n            }\n            if(data.password === ''){\n                this.setErrors({password: \"Fill the box\"})\n            }\n            if(data.confirmPassword === ''){\n                this.setErrors({confirmPassword: \"Fill the box\"})\n            }else if(data['password'] !== data['confirmPassword']){\n                this.setErrors({confirmPassword: \"password did not match\"})\n            }\n            resolve()\n        })\n    }\n\n\n    /////////////////////// ERROR HANDLERS ENDS //////////////////////////////////\n\n\n\n    //////////////////////  REQUEST RELATED FUNCTONS ///////////////////////////\n\n    handleResponse = (response)=>{\n        const { message , status } = response.result;\n\n        if(response.status === 200){\n            switch(status){\n                case 201:\n                    this.setState({\n                        message\n                    },clearMessage.bind(this,3000))\n                    this.props.setStudents();\n                    break;\n                case 409:\n                    this.setErrors({\n                        exists:message\n                    })\n                    break;\n                case 400:\n                    this.setErrors({\n                        otherError: message\n                    })\n                    break;\n                default:\n                    break\n            }\n        }\n    }\n\n    onSubmit = (e)=>{\n        e.preventDefault();\n\n        const url = 'http://localhost:5000/signup';\n        handleSubmit.call(this,url);\n    }\n\n    //////////////////////  REQUEST RELATED FUNCITONS ENDS ///////////////////////////\n\n\n    ///////////////////// LIFE CYCLE FUNCTION ////////////////////////////////////////\n    setDefaultState = ()=>{\n        const department = this.props.departments[0]['name']\n        setInputState.call(this,\"data\",\"department\",department);\n    }\n\n\n    componentDidMount = ()=>{\n        /***********************************************************/\n        /* \n            FOR NOW I WILL FETCH ALL STUDENT \n            IN FUTURE I WILL FETCH FOR  A PARTICULAR COURSE AND DEPARTMENT\n        */\n        this.props.setStudents();\n        this.props.setDepartments()\n        .then(()=>{this.setDefaultState()})\n    }\n\n    ///////////////////// LIFE CYCLE FUNCTION ENDS ////////////////////////////////////////\n\n\n    render() {\n        const listOfStudents = this.props.students;\n        const listOfDepartments = this.props.departments;\n\n        return (\n            <div className=\"MainBody sidePage\">\n                <div className=\"Container\">\n                    <div className=\"FormContainer\">\n                        <header>\n                            <h1>Add Student</h1>\n                        </header>\n                        {this.state.message && <span className=\"confirmationMessage\">{this.state.message}</span>}\n                        {this.state.errors.exists && <span className=\"errorMessage\">{this.state.errors.exists}</span>}\n                        <form onSubmit={this.onSubmit}>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"username\"\n                                >\n                                    Username Of Student\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"username\"\n                                            placeholder=\"\"\n                                            value={this.state.data.username}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.username && <span className=\"errorMessage\">{this.state.errors.username}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"name\"\n                                >\n                                    Name Of Student\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"name\"\n                                            placeholder=\"\"\n                                            value={this.state.data.name}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.name && <span className=\"errorMessage\">{this.state.errors.name}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"roll_no\"\n                                >\n                                    Roll Number Of Student\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"text\"\n                                            id=\"roll_no\"\n                                            placeholder=\"\"\n                                            value={this.state.data.roll_no}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.roll_no && <span className=\"errorMessage\">{this.state.errors.roll_no}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"Label\" htmlFor=\"department\">Department</label>\n                                <div className=\"selectDiv\">\n                                    <select \n                                        id=\"department\"\n                                        name=\"department\"\n                                        value={this.state.data.department}\n                                        onChange={this.onInputChange}\n                                    >\n                                        {\n                                            !!listOfDepartments &&\n                                            listOfDepartments.map( department =>{\n                                                const { name } = department\n                                                return <option key={name} value={name}>{name}</option>\n                                            })\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"Label\" htmlFor=\"semester\">Semester</label>\n                                <div className=\"selectDiv\">\n                                    <select \n                                        id=\"semester\"\n                                        name=\"semester\"\n                                        value={this.state.data.semester}\n                                        onChange={this.onInputChange}\n                                    >\n                                        <option  value=\"1\">1</option>\n                                        <option  value=\"2\">2</option>\n                                        <option  value=\"3\">3</option>\n                                        <option  value=\"4\">4</option>\n                                        <option  value=\"5\">5</option>\n                                        <option  value=\"6\">6</option>\n                                        <option  value=\"7\">7</option>\n                                        <option  value=\"8\">8</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"password\"\n                                >\n                                    Password\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"password\"\n                                            id=\"password\"\n                                            placeholder=\"\"\n                                            value={this.state.data.password}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.password && <span className=\"errorMessage\">{this.state.errors.password}</span>}\n                                </div>\n                            </div>\n                            <div>\n                                <label \n                                    className=\"Label\"\n                                    htmlFor=\"confirmPassword\"\n                                >\n                                    Confirm Password\n                                </label>\n                                <div className=\"inputErrorDiv\">\n                                    <div className=\"inputDiv\">\n                                        <input\n                                            type=\"password\"\n                                            id=\"confirmPassword\"\n                                            placeholder=\"\"\n                                            value={this.state.data.confirmPassword}\n                                            onChange={this.onInputChange}\n                                        />\n                                    </div>\n                                    {this.state.errors.confirmPassword && <span className=\"errorMessage\">{this.state.errors.confirmPassword}</span>}\n                                </div>\n                            </div>\n                            <button className=\"Button\">\n                                Add Student\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"ListBlock\">\n                    <header>\n                        <h2> All Students </h2>\n                    </header>\n                    <div className=\"MainContainer\">\n                        <ol>\n                            {\n                                !!listOfStudents &&\n                                listOfStudents.map(student =>{\n                                    const {username, name, department, semester, confirmed} = student\n                                    return <li \n                                            key={username}>\n                                                <StudentComponent \n                                                    username={username} \n                                                    name={name} \n                                                    department={department} \n                                                    semester={semester} \n                                                    isConfirmed={confirmed} \n                                                    />\n                                            </li>\n                                })\n                            }\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state)=>{\n    return {\n        students: state.students,\n        departments: state.departments\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        setStudents : (filters,projection) => dispatch(getAndSetStudents(filters,projection)),\n        setDepartments: (filters,projection) => dispatch(getAndSetDepartments(filters,projection))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddStudentPage);"]},"metadata":{},"sourceType":"module"}