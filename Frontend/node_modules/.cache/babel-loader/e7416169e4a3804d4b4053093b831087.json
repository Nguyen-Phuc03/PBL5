{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Reactjs\\\\PBL5_Demo\\\\Frontend\\\\src\\\\components\\\\showAttendancePage\\\\showAttendancePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getAndSetStudents } from '../../actions/students';\nimport { getAndSetTeachers } from '../../actions/teachers';\nimport getAndSetAttendance from '../../actions/attendance';\nimport getAndSetCourses from '../../actions/courses';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage';\nimport setInputState from '../../genericFunctions/setInputState';\nimport { getRoleFromCookie, getUsernameFromCookie } from '../../helperFunction/getCookie';\nimport './_showAttendancePage.scss';\n\nclass ShowAttendance extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = e => {\n      const value = e.target.value;\n      const name = e.target.id;\n      /**\n       * We need to make sure table should not render \n       * until setAttendance is called and done\n       */\n\n      console.log(value, name);\n      this.setState({\n        status: \"notReady\"\n      });\n      setInputState.call(this, \"data\", name, value).then(() => {\n        this.props.setAttendance(this.state.data).then(() => {\n          this.setState({\n            status: \"ready\"\n          });\n        });\n      });\n    };\n\n    this.setErrors = toUpdate => {\n      this.setState(prevState => {\n        return {\n          errors: { ...prevState.errors,\n            ...toUpdate\n          }\n        };\n      });\n      this.setState({\n        errorsExists: true\n      });\n    };\n\n    this.clearAllErrors = () => {\n      this.setErrors({\n        course: \"\"\n      });\n      this.setState({\n        errorsExists: false\n      });\n    };\n\n    this.setDefaultFilters = () => {\n      const date = new Date();\n      return new Promise((resolve, reject) => {\n        this.setState(prevState => {\n          const role = getRoleFromCookie();\n\n          if (role === 'student') {\n            return { ...prevState,\n              data: {\n                all_or_one: \"one\",\n                course: this.state.courses[0],\n                month: date.getMonth(),\n                department: this.props.students[0]['department'],\n                semester: this.props.students[0]['semester'],\n                roll_no: this.props.students[0]['roll_no'],\n                role\n              }\n            };\n          } else {\n            return { ...prevState,\n              data: {\n                all_or_one: \"all\",\n                course: this.state.courses[0],\n                month: date.getMonth(),\n                department: this.props.teachers[0]['department'],\n                teacherAssigned: this.props.teachers[0]['name'],\n                role\n              }\n            };\n          }\n        }, resolve);\n      });\n    };\n\n    this.handleResponse = response => {\n      const {\n        message,\n        data,\n        status\n      } = response.result;\n\n      if (response.status === 200) {\n        switch (status) {\n          case 200:\n            // this.setState({\n            //     message\n            // },clearMessage.bind(this,3000))\n            console.log(data);\n            break;\n\n          case 409:\n            this.setErrors({\n              exists: message\n            });\n            break;\n\n          case 400:\n            this.setErrors({\n              otherError: message\n            });\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    this.componentDidMount = () => {\n      const usersRole = getRoleFromCookie();\n\n      if (usersRole === 'student') {\n        const filter = {\n          username: getUsernameFromCookie()\n        };\n        const projection = {\n          courseEnrolled: true,\n          roll_no: true,\n          department: true,\n          semester: true\n        };\n        /**\n         * Set the Student using Filter and Projection\n         */\n\n        this.props.setStudent(filter, projection).then(() => {\n          /**\n           * Set the Course That Student is EnrolledIn.\n           */\n          const coursesEnrolled = this.props.students[0]['courseEnrolled'] ? this.props.students[0]['courseEnrolled'] : [];\n          this.setState(prevState => {\n            return { ...prevState,\n              courses: [].concat(coursesEnrolled)\n            };\n          }, () => {\n            this.setDefaultFilters()\n            /**\n             * When Default State is Set ,\n             * First make sure there is not Error\n             * Then :-make the request to \n             * get the attendance for default filters\n             */\n            .then(() => this.applyAuthentication()).then(() => {\n              this.props.setAttendance(this.state.data).then(() => {\n                this.setState({\n                  status: \"ready\"\n                });\n                console.log(this.props.attendance);\n              });\n            }).catch(() => {\n              console.log(this.state);\n            });\n          });\n        });\n      } else if (usersRole === \"teacher\") {\n        const filter = {\n          username: getUsernameFromCookie()\n        };\n        const projection = {\n          courseAssigned: true,\n          department: true,\n          name: true\n        };\n        /**\n         * Set the Teacher using Filter and Projection\n         */\n\n        this.props.setTeacher(filter, projection).then(() => {\n          /**\n           * Set the Course That Teacher is Assigned To.\n           */\n          const courseAssigned = this.props.teachers[0]['courseAssigned'] ? this.props.teachers[0]['courseAssigned'] : [];\n          this.setState(prevState => {\n            return { ...prevState,\n              courses: [].concat(courseAssigned)\n            };\n          }, () => {\n            this.setDefaultFilters()\n            /**\n             * When Default State is Set ,\n             * First make sure there is not Error\n             * Then :-make the request to \n             * get the attendance for default filters\n             */\n            .then(() => this.applyAuthentication()).then(() => {\n              this.props.setAttendance(this.state.data);\n            }).catch(() => {\n              console.log(this.state);\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      courses: [],\n      data: {},\n      errors: {},\n      errorsExists: false,\n      status: \"notReady\"\n    };\n  }\n\n  applyAuthentication() {\n    const data = this.state.data;\n    return new Promise((resolve, reject) => {\n      if (data.course === undefined) {\n        this.setErrors({\n          course: \"Not Enrolled in any Course!\"\n        });\n        reject();\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const currentMonth = date.getMonth();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const attendance = this.props.attendance;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MainBody SidePage ShowAttendanceMainPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, this.state.errors.course && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 50\n      }\n    }, this.state.errors.course), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container ShowAttendanceContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AttendanceContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filterDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }, getRoleFromCookie() === \"student\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"all_or_one\",\n      name: \"all_or_one\",\n      value: this.state.data.all_or_one,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 49\n      }\n    }, \"One\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 49\n      }\n    }, \"All\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"course\",\n      name: \"course\",\n      value: this.state.data.course,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 41\n      }\n    }, !!this.state.courses && this.state.courses.map(course => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: course,\n        value: course,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 60\n        }\n      }, course);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"month\",\n      name: \"month\",\n      value: this.state.data.month,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: currentMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 45\n      }\n    }, \" \", months[currentMonth], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: (currentMonth - 1 + 12) % 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 45\n      }\n    }, \" \", months[(currentMonth - 1 + 12) % 12], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: (currentMonth - 2 + 12) % 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 45\n      }\n    }, \" \", months[(currentMonth - 2 + 12) % 12], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: (currentMonth - 3 + 12) % 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 45\n      }\n    }, \" \", months[(currentMonth - 3 + 12) % 12], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: (currentMonth - 4 + 12) % 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 45\n      }\n    }, \" \", months[(currentMonth - 4 + 12) % 12], \" \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: (currentMonth - 5 + 12) % 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 45\n      }\n    }, \" \", months[(currentMonth - 5 + 12) % 12], \" \"))))), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, this.state.data['all_or_one'] === \"one\" && this.state.status === 'ready' ?\n    /*#__PURE__*/\n\n    /**\n         FOR SINGLE STUDENT\n     */\n    React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 57\n      }\n    }, \" Roll No \"), attendance[Object.keys(attendance)[0]] ? attendance[Object.keys(attendance)[0]].map(data => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: data.day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 72\n        }\n      }, data.day);\n    }) : /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 61\n      }\n    }, \"Days...\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 53\n      }\n    }, Object.keys(attendance)[0] && /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 88\n      }\n    }, Object.keys(attendance)[0]), attendance[Object.keys(attendance)[0]] && attendance[Object.keys(attendance)[0]].map(data => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: data.day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 72\n        }\n      }, data.present ? \"P\" : 'A');\n    })))) :\n    /*#__PURE__*/\n\n    /**\n        FOR FULL CLASS\n    */\n    React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 57\n      }\n    }, \" Roll No \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 57\n      }\n    }, \" Classes Attended \"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 57\n      }\n    }, \" Total Classes \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 49\n      }\n    }, Object.keys(attendance).map(roll_no => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: roll_no,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 68\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 73\n        }\n      }, roll_no), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 73\n        }\n      }, attendance[roll_no]['totalClassesAttended']), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 73\n        }\n      }, attendance[roll_no]['totalClasses']));\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    students: state.students,\n    teachers: state.teachers,\n    courses: state.courses,\n    attendance: state.attendance\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setStudent: (filter, projection) => dispatch(getAndSetStudents(filter, projection)),\n    setTeacher: (filter, projection) => dispatch(getAndSetTeachers(filter, projection)),\n    setAttendance: filters => dispatch(getAndSetAttendance(filters)),\n    SetCourses: (filter, projection) => dispatch(getAndSetCourses(filter, projection))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowAttendance);","map":{"version":3,"sources":["E:/Documents/Reactjs/PBL5_Demo/Frontend/src/components/showAttendancePage/showAttendancePage.js"],"names":["React","Component","connect","getAndSetStudents","getAndSetTeachers","getAndSetAttendance","getAndSetCourses","handleSubmit","clearMessage","setInputState","getRoleFromCookie","getUsernameFromCookie","ShowAttendance","constructor","onInputChange","e","value","target","name","id","console","log","setState","status","call","then","props","setAttendance","state","data","setErrors","toUpdate","prevState","errors","errorsExists","clearAllErrors","course","setDefaultFilters","date","Date","Promise","resolve","reject","role","all_or_one","courses","month","getMonth","department","students","semester","roll_no","teachers","teacherAssigned","handleResponse","response","message","result","exists","otherError","componentDidMount","usersRole","filter","username","projection","courseEnrolled","setStudent","coursesEnrolled","concat","applyAuthentication","attendance","catch","courseAssigned","setTeacher","undefined","render","currentMonth","months","map","Object","keys","day","present","mapStateToProps","mapDispatchToProps","dispatch","filters","SetCourses"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AAEA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,gCAAzD;AACA,OAAO,4BAAP;;AAEA,MAAMC,cAAN,SAA6BX,SAA7B,CAAsC;AAElCY,EAAAA,WAAW,GAAE;AACT;;AADS,SAYbC,aAZa,GAYIC,CAAD,IAAK;AACjB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,YAAME,IAAI,GAAGH,CAAC,CAACE,MAAF,CAASE,EAAtB;AAEA;AACR;AACA;AACA;;AAESC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAkBE,IAAlB;AACD,WAAKI,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAd;AAEAd,MAAAA,aAAa,CAACe,IAAd,CAAmB,IAAnB,EAAwB,MAAxB,EAA+BN,IAA/B,EAAoCF,KAApC,EACCS,IADD,CACM,MAAI;AACN,aAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKC,KAAL,CAAWC,IAApC,EACCJ,IADD,CACM,MAAI;AACN,eAAKH,QAAL,CAAc;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAd;AACH,SAHD;AAIH,OAND;AAOH,KA/BY;;AAAA,SAiCbO,SAjCa,GAiCAC,QAAD,IAAY;AACpB,WAAKT,QAAL,CAAeU,SAAD,IAAc;AACxB,eAAO;AACHC,UAAAA,MAAM,EAAC,EACH,GAAGD,SAAS,CAACC,MADV;AAEH,eAAGF;AAFA;AADJ,SAAP;AAMH,OAPD;AAQA,WAAKT,QAAL,CAAc;AAACY,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KA3CY;;AAAA,SA6CbC,cA7Ca,GA6CI,MAAI;AACjB,WAAKL,SAAL,CAAe;AACXM,QAAAA,MAAM,EAAE;AADG,OAAf;AAGA,WAAKd,QAAL,CAAc;AAACY,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KAlDY;;AAAA,SAgEbG,iBAhEa,GAgEO,MAAI;AACpB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,aAAKpB,QAAL,CAAeU,SAAD,IAAa;AACvB,gBAAMW,IAAI,GAAGjC,iBAAiB,EAA9B;;AACA,cAAGiC,IAAI,KAAK,SAAZ,EAAsB;AAClB,mBAAO,EACH,GAAGX,SADA;AAEHH,cAAAA,IAAI,EAAE;AACFe,gBAAAA,UAAU,EAAE,KADV;AAEFR,gBAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWiB,OAAX,CAAmB,CAAnB,CAFN;AAGFC,gBAAAA,KAAK,EAAER,IAAI,CAACS,QAAL,EAHL;AAIFC,gBAAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWuB,QAAX,CAAoB,CAApB,EAAuB,YAAvB,CAJV;AAKFC,gBAAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWuB,QAAX,CAAoB,CAApB,EAAuB,UAAvB,CALR;AAMFE,gBAAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWuB,QAAX,CAAoB,CAApB,EAAuB,SAAvB,CANP;AAOFN,gBAAAA;AAPE;AAFH,aAAP;AAYH,WAbD,MAaK;AACD,mBAAO,EACH,GAAGX,SADA;AAEHH,cAAAA,IAAI,EAAE;AACFe,gBAAAA,UAAU,EAAE,KADV;AAEFR,gBAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWiB,OAAX,CAAmB,CAAnB,CAFN;AAGFC,gBAAAA,KAAK,EAAER,IAAI,CAACS,QAAL,EAHL;AAIFC,gBAAAA,UAAU,EAAE,KAAKtB,KAAL,CAAW0B,QAAX,CAAoB,CAApB,EAAuB,YAAvB,CAJV;AAKFC,gBAAAA,eAAe,EAAG,KAAK3B,KAAL,CAAW0B,QAAX,CAAoB,CAApB,EAAuB,MAAvB,CALhB;AAMFT,gBAAAA;AANE;AAFH,aAAP;AAWH;AACJ,SA5BD,EA4BEF,OA5BF;AA6BH,OA9BM,CAAP;AA+BH,KAjGY;;AAAA,SAmGba,cAnGa,GAmGKC,QAAD,IAAY;AACzB,YAAM;AAACC,QAAAA,OAAD;AAAU3B,QAAAA,IAAV;AAAiBN,QAAAA;AAAjB,UAA4BgC,QAAQ,CAACE,MAA3C;;AAEA,UAAGF,QAAQ,CAAChC,MAAT,KAAoB,GAAvB,EAA2B;AACvB,gBAAOA,MAAP;AACI,eAAK,GAAL;AACI;AACA;AACA;AACAH,YAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACA;;AACJ,eAAK,GAAL;AACI,iBAAKC,SAAL,CAAe;AACX4B,cAAAA,MAAM,EAACF;AADI,aAAf;AAGA;;AACJ,eAAK,GAAL;AACI,iBAAK1B,SAAL,CAAe;AACX6B,cAAAA,UAAU,EAAEH;AADD,aAAf;AAGA;;AACJ;AACI;AAlBR;AAoBH;AACJ,KA5HY;;AAAA,SA8HbI,iBA9Ha,GA8HO,MAAI;AAEpB,YAAMC,SAAS,GAAGnD,iBAAiB,EAAnC;;AACA,UAAGmD,SAAS,KAAK,SAAjB,EAA2B;AACvB,cAAMC,MAAM,GAAG;AACXC,UAAAA,QAAQ,EAAGpD,qBAAqB;AADrB,SAAf;AAGA,cAAMqD,UAAU,GAAG;AACfC,UAAAA,cAAc,EAAE,IADD;AAEfd,UAAAA,OAAO,EAAE,IAFM;AAGfH,UAAAA,UAAU,EAAE,IAHG;AAIfE,UAAAA,QAAQ,EAAE;AAJK,SAAnB;AAOA;AACZ;AACA;;AACY,aAAKxB,KAAL,CAAWwC,UAAX,CAAsBJ,MAAtB,EAA8BE,UAA9B,EACCvC,IADD,CACM,MAAI;AACN;AAChB;AACA;AACgB,gBAAM0C,eAAe,GAAG,KAAKzC,KAAL,CAAWuB,QAAX,CAAoB,CAApB,EAAuB,gBAAvB,IAEwC,KAAKvB,KAAL,CAAWuB,QAAX,CAAoB,CAApB,EAAuB,gBAAvB,CAFxC,GAG0C,EAHlE;AAIA,eAAK3B,QAAL,CAAeU,SAAD,IAAa;AACvB,mBAAO,EACH,GAAGA,SADA;AAEHa,cAAAA,OAAO,EAAG,GAAGuB,MAAH,CAAUD,eAAV;AAFP,aAAP;AAIH,WALD,EAKE,MAAI;AACF,iBAAK9B,iBAAL;AACA;AACpB;AACA;AACA;AACA;AACA;AANoB,aAOCZ,IAPD,CAOM,MAAI,KAAK4C,mBAAL,EAPV,EAQC5C,IARD,CAQM,MAAI;AACN,mBAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKC,KAAL,CAAWC,IAApC,EACCJ,IADD,CACM,MAAI;AACN,qBAAKH,QAAL,CAAc;AAACC,kBAAAA,MAAM,EAAE;AAAT,iBAAd;AACAH,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAW4C,UAAvB;AACH,eAJD;AAKH,aAdD,EAeCC,KAfD,CAeO,MAAI;AACPnD,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAjB;AACH,aAjBD;AAkBH,WAxBD;AAyBH,SAlCD;AAmCH,OAjDD,MAiDM,IAAGiC,SAAS,KAAK,SAAjB,EAA2B;AAC7B,cAAMC,MAAM,GAAG;AACXC,UAAAA,QAAQ,EAAGpD,qBAAqB;AADrB,SAAf;AAGA,cAAMqD,UAAU,GAAG;AACfQ,UAAAA,cAAc,EAAE,IADD;AAEfxB,UAAAA,UAAU,EAAE,IAFG;AAGf9B,UAAAA,IAAI,EAAE;AAHS,SAAnB;AAMA;AACZ;AACA;;AACY,aAAKQ,KAAL,CAAW+C,UAAX,CAAsBX,MAAtB,EAA8BE,UAA9B,EACCvC,IADD,CACM,MAAI;AACN;AAChB;AACA;AACgB,gBAAM+C,cAAc,GAAG,KAAK9C,KAAL,CAAW0B,QAAX,CAAoB,CAApB,EAAuB,gBAAvB,IAEyC,KAAK1B,KAAL,CAAW0B,QAAX,CAAoB,CAApB,EAAuB,gBAAvB,CAFzC,GAG2C,EAHlE;AAIA,eAAK9B,QAAL,CAAeU,SAAD,IAAa;AACvB,mBAAO,EACH,GAAGA,SADA;AAEHa,cAAAA,OAAO,EAAG,GAAGuB,MAAH,CAAUI,cAAV;AAFP,aAAP;AAIH,WALD,EAKE,MAAI;AACF,iBAAKnC,iBAAL;AACA;AACpB;AACA;AACA;AACA;AACA;AANoB,aAOCZ,IAPD,CAOM,MAAI,KAAK4C,mBAAL,EAPV,EAQC5C,IARD,CAQM,MAAI;AACN,mBAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKC,KAAL,CAAWC,IAApC;AACH,aAVD,EAWC0C,KAXD,CAWO,MAAI;AACPnD,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAjB;AACH,aAbD;AAcH,WApBD;AAqBH,SA9BD;AA+BH;AACJ,KA/NY;;AAET,SAAKA,KAAL,GAAa;AACTiB,MAAAA,OAAO,EAAE,EADA;AAEThB,MAAAA,IAAI,EAAE,EAFG;AAGTI,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,YAAY,EAAG,KAJN;AAKTX,MAAAA,MAAM,EAAE;AALC,KAAb;AAQH;;AA0CD8C,EAAAA,mBAAmB,GAAE;AACjB,UAAMxC,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,WAAO,IAAIW,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,UAAGb,IAAI,CAACO,MAAL,KAAgBsC,SAAnB,EAA6B;AACzB,aAAK5C,SAAL,CAAe;AAACM,UAAAA,MAAM,EAAE;AAAT,SAAf;AACAM,QAAAA,MAAM;AACT,OAHD,MAGK;AACDD,QAAAA,OAAO;AACV;AACJ,KAPM,CAAP;AAQH;;AAmKDkC,EAAAA,MAAM,GAAE;AACJ,UAAMrC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMqC,YAAY,GAAGtC,IAAI,CAACS,QAAL,EAArB;AACA,UAAM8B,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EACC,OADD,EACU,KADV,EACiB,MADjB,EACyB,MADzB,EAEC,QAFD,EAEW,WAFX,EAEwB,SAFxB,EAGC,UAHD,EAGa,UAHb,CAAf;AAIA,UAAMP,UAAU,GAAG,KAAK5C,KAAL,CAAW4C,UAA9B;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1C,KAAL,CAAWK,MAAX,CAAkBG,MAAlB,iBAA4B;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKR,KAAL,CAAWK,MAAX,CAAkBG,MAA/C,CADjC,eAEI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ1B,iBAAiB,OAAO,SAAxB,iBACA;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,YADP;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWC,IAAX,CAAgBe,UAH3B;AAII,MAAA,QAAQ,EAAE,KAAK9B,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,eAOI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,CADJ,CAHR,eAeI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,KAAK,EAAE,KAAKc,KAAL,CAAWC,IAAX,CAAgBO,MAH3B;AAII,MAAA,QAAQ,EAAE,KAAKtB,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMQ,CAAC,CAAC,KAAKc,KAAL,CAAWiB,OAAb,IACA,KAAKjB,KAAL,CAAWiB,OAAX,CAAmBiC,GAAnB,CAAuB1C,MAAM,IAAI;AAC7B,0BAAO;AAAQ,QAAA,GAAG,EAAEA,MAAb;AAAqB,QAAA,KAAK,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCA,MAArC,CAAP;AACH,KAFD,CAPR,CADJ,CAfJ,eA6BI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAAX,CAAgBiB,KAH3B;AAII,MAAA,QAAQ,EAAE,KAAKhC,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAQ,MAAA,KAAK,EAAE8D,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgCC,MAAM,CAACD,YAAD,CAAtC,MANJ,eAOI;AAAQ,MAAA,KAAK,EAAE,CAACA,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgDC,MAAM,CAAE,CAACD,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAA5B,CAAtD,MAPJ,eAQI;AAAQ,MAAA,KAAK,EAAE,CAACA,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgDC,MAAM,CAAE,CAACD,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAA5B,CAAtD,MARJ,eASI;AAAQ,MAAA,KAAK,EAAE,CAACA,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgDC,MAAM,CAAE,CAACD,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAA5B,CAAtD,MATJ,eAUI;AAAQ,MAAA,KAAK,EAAE,CAACA,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgDC,MAAM,CAAE,CAACD,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAA5B,CAAtD,MAVJ,eAWI;AAAQ,MAAA,KAAK,EAAE,CAACA,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgDC,MAAM,CAAE,CAACD,YAAY,GAAG,CAAf,GAAmB,EAApB,IAA0B,EAA5B,CAAtD,MAXJ,CADJ,CA7BJ,CADJ,CADJ,eAgDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKhD,KAAL,CAAWC,IAAX,CAAgB,YAAhB,MAAkC,KAAlC,IAA2C,KAAKD,KAAL,CAAWL,MAAX,KAAsB,OAAjE;AAAA;;AAEO;AAC/C;AACA;AAC4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAIQ+C,UAAU,CAACS,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwB,CAAxB,CAAD,CAAV,GAAyCA,UAAU,CAACS,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwB,CAAxB,CAAD,CAAV,CAAuCQ,GAAvC,CAA2CjD,IAAI,IAAG;AACvF,0BAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACoD,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBpD,IAAI,CAACoD,GAAzB,CAAP;AACH,KAFwC,CAAzC,gBAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARR,CADJ,CADJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwB,CAAxB,kBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKS,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwB,CAAxB,CAAL,CADnC,EAGQA,UAAU,CAACS,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwB,CAAxB,CAAD,CAAV,IAA0CA,UAAU,CAACS,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwB,CAAxB,CAAD,CAAV,CAAuCQ,GAAvC,CAA2CjD,IAAI,IAAG;AACxF,0BAAO;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACoD,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBpD,IAAI,CAACqD,OAAL,GAAe,GAAf,GAAqB,GAAzC,CAAP;AACH,KAFyC,CAHlD,CADJ,CAdJ,CALJ;AAAA;;AA+BI;AAC5C;AACA;AAC2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CADJ,CADL,eAQK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQH,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwBQ,GAAxB,CAA4B3B,OAAO,IAAG;AAClC,0BAAO;AAAI,QAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,OAAL,CADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKmB,UAAU,CAACnB,OAAD,CAAV,CAAoB,sBAApB,CAAL,CAFL,eAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKmB,UAAU,CAACnB,OAAD,CAAV,CAAoB,cAApB,CAAL,CAHL,CAAP;AAKH,KAND,CAFR,CARL,CApCX,CADJ,CAhDJ,CADJ,CAFJ,CADJ,CADJ;AAwHH;;AApWiC;;AAwWtC,MAAMgC,eAAe,GAAIvD,KAAD,IAAU;AAC9B,SAAO;AACHqB,IAAAA,QAAQ,EAAGrB,KAAK,CAACqB,QADd;AAEHG,IAAAA,QAAQ,EAAGxB,KAAK,CAACwB,QAFd;AAGHP,IAAAA,OAAO,EAAGjB,KAAK,CAACiB,OAHb;AAIHyB,IAAAA,UAAU,EAAG1C,KAAK,CAAC0C;AAJhB,GAAP;AAMH,CAPD;;AASA,MAAMc,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAO;AACHnB,IAAAA,UAAU,EAAG,CAACJ,MAAD,EAASE,UAAT,KAAuBqB,QAAQ,CAAClF,iBAAiB,CAAC2D,MAAD,EAASE,UAAT,CAAlB,CADzC;AAEHS,IAAAA,UAAU,EAAG,CAACX,MAAD,EAASE,UAAT,KAAuBqB,QAAQ,CAACjF,iBAAiB,CAAC0D,MAAD,EAASE,UAAT,CAAlB,CAFzC;AAGHrC,IAAAA,aAAa,EAAI2D,OAAD,IAAYD,QAAQ,CAAChF,mBAAmB,CAACiF,OAAD,CAApB,CAHjC;AAIHC,IAAAA,UAAU,EAAG,CAACzB,MAAD,EAASE,UAAT,KAAuBqB,QAAQ,CAAC/E,gBAAgB,CAACwD,MAAD,EAASE,UAAT,CAAjB;AAJzC,GAAP;AAMH,CAPD;;AASA,eAAe9D,OAAO,CAACiF,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxE,cAA7C,CAAf","sourcesContent":["import React , { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAndSetStudents } from '../../actions/students';\nimport { getAndSetTeachers } from '../../actions/teachers';\nimport getAndSetAttendance from '../../actions/attendance';\nimport getAndSetCourses from '../../actions/courses';\nimport handleSubmit from '../../genericFunctions/handleSubmit';\nimport clearMessage from '../../genericFunctions/clearMessage';\nimport setInputState from '../../genericFunctions/setInputState';\n\nimport { getRoleFromCookie, getUsernameFromCookie } from '../../helperFunction/getCookie';\nimport './_showAttendancePage.scss';\n\nclass ShowAttendance extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            courses: [],\n            data: {},\n            errors: {},\n            errorsExists : false,\n            status: \"notReady\"\n        }\n\n    }\n\n    onInputChange = (e)=>{\n        const value = e.target.value;\n        const name = e.target.id;\n\n        /**\n         * We need to make sure table should not render \n         * until setAttendance is called and done\n         */\n\n         console.log(value,name)\n        this.setState({status: \"notReady\"})\n\n        setInputState.call(this,\"data\",name,value)\n        .then(()=>{\n            this.props.setAttendance(this.state.data)\n            .then(()=>{\n                this.setState({status: \"ready\"})\n            })\n        })\n    }\n\n    setErrors = (toUpdate)=>{\n        this.setState((prevState) =>{\n            return {\n                errors:{\n                    ...prevState.errors,\n                    ...toUpdate\n                }\n            }\n        })\n        this.setState({errorsExists: true});\n    }\n\n    clearAllErrors = ()=>{\n        this.setErrors({\n            course: \"\"\n        })\n        this.setState({errorsExists: false});\n    }\n\n    applyAuthentication(){\n        const data = this.state.data; \n        return new Promise((resolve, reject)=>{\n            if(data.course === undefined){\n                this.setErrors({course: \"Not Enrolled in any Course!\"})\n                reject();\n            }else{\n                resolve();\n            }\n        })\n    }\n\n    setDefaultFilters = ()=>{\n        const date = new Date();\n        return new Promise((resolve, reject)=>{\n            this.setState((prevState)=>{\n                const role = getRoleFromCookie();\n                if(role === 'student'){\n                    return {\n                        ...prevState,\n                        data: {\n                            all_or_one: \"one\",\n                            course: this.state.courses[0],\n                            month: date.getMonth(),\n                            department: this.props.students[0]['department'],\n                            semester: this.props.students[0]['semester'],\n                            roll_no: this.props.students[0]['roll_no'],\n                            role\n                        }\n                    }\n                }else{\n                    return {\n                        ...prevState,\n                        data: {\n                            all_or_one: \"all\",\n                            course: this.state.courses[0],\n                            month: date.getMonth(),\n                            department: this.props.teachers[0]['department'],\n                            teacherAssigned : this.props.teachers[0]['name'],\n                            role\n                        }\n                    }\n                }\n            },resolve)\n        })\n    }\n\n    handleResponse = (response)=>{\n        const {message, data , status } = response.result;\n\n        if(response.status === 200){\n            switch(status){\n                case 200:\n                    // this.setState({\n                    //     message\n                    // },clearMessage.bind(this,3000))\n                    console.log(data);\n                    break;\n                case 409:\n                    this.setErrors({\n                        exists:message\n                    })\n                    break;\n                case 400:\n                    this.setErrors({\n                        otherError: message\n                    })\n                    break;\n                default:\n                    break\n            }\n        }\n    }\n\n    componentDidMount = ()=>{\n\n        const usersRole = getRoleFromCookie();\n        if(usersRole === 'student'){\n            const filter = {\n                username : getUsernameFromCookie()\n            }\n            const projection = {\n                courseEnrolled: true,\n                roll_no: true,\n                department: true,\n                semester: true\n            }\n\n            /**\n             * Set the Student using Filter and Projection\n             */\n            this.props.setStudent(filter, projection)\n            .then(()=>{\n                /**\n                 * Set the Course That Student is EnrolledIn.\n                 */\n                const coursesEnrolled = this.props.students[0]['courseEnrolled'] \n                                                                                ? \n                                                                                this.props.students[0]['courseEnrolled'] \n                                                                                : [] \n                this.setState((prevState)=>{\n                    return {\n                        ...prevState,\n                        courses : [].concat(coursesEnrolled)\n                    }\n                },()=>{\n                    this.setDefaultFilters()\n                    /**\n                     * When Default State is Set ,\n                     * First make sure there is not Error\n                     * Then :-make the request to \n                     * get the attendance for default filters\n                     */\n                    .then(()=>this.applyAuthentication())\n                    .then(()=>{\n                        this.props.setAttendance(this.state.data)\n                        .then(()=>{\n                            this.setState({status: \"ready\"})\n                            console.log(this.props.attendance);\n                        })\n                    })\n                    .catch(()=>{\n                        console.log(this.state);\n                    })\n                })\n            })\n        }else if(usersRole === \"teacher\"){\n            const filter = {\n                username : getUsernameFromCookie()\n            }\n            const projection = {\n                courseAssigned: true,\n                department: true,\n                name: true\n            }\n\n            /**\n             * Set the Teacher using Filter and Projection\n             */\n            this.props.setTeacher(filter, projection)\n            .then(()=>{\n                /**\n                 * Set the Course That Teacher is Assigned To.\n                 */\n                const courseAssigned = this.props.teachers[0]['courseAssigned'] \n                                                                                ? \n                                                                                this.props.teachers[0]['courseAssigned'] \n                                                                                : [] \n                this.setState((prevState)=>{\n                    return {\n                        ...prevState,\n                        courses : [].concat(courseAssigned)\n                    }\n                },()=>{\n                    this.setDefaultFilters()\n                    /**\n                     * When Default State is Set ,\n                     * First make sure there is not Error\n                     * Then :-make the request to \n                     * get the attendance for default filters\n                     */\n                    .then(()=>this.applyAuthentication())\n                    .then(()=>{\n                        this.props.setAttendance(this.state.data)\n                    })\n                    .catch(()=>{\n                        console.log(this.state);\n                    })\n                })\n            })\n        }\n    }\n\n    render(){\n        const date = new Date();\n        const currentMonth = date.getMonth();\n        const months = ['January', 'February', 'March', \n                        'April', 'May', 'June', 'July', \n                        'August', 'September', 'October', \n                        'November', 'December'];\n        const attendance = this.props.attendance;\n        \n        return (\n            <React.Fragment>\n                <div className=\"MainBody SidePage ShowAttendanceMainPage\">\n                    {this.state.errors.course && <p className=\"errorMessage\">{this.state.errors.course}</p>}\n                    <div className=\"Container ShowAttendanceContainer\">\n                        <div className=\"AttendanceContainer\">\n                            <header>\n                                <div className=\"filterDiv\">\n                                    {\n                                        getRoleFromCookie() === \"student\" &&\n                                        <div className=\"\">\n                                            <select\n                                                id=\"all_or_one\"\n                                                name=\"all_or_one\"\n                                                value={this.state.data.all_or_one}\n                                                onChange={this.onInputChange}\n                                            >\n                                                <option value=\"one\">One</option>\n                                                <option value=\"all\">All</option>\n                                            </select>\n                                        </div>\n                                    }\n                                    <div className=\"\">\n                                        <select\n                                            id=\"course\"\n                                            name=\"course\"\n                                            value={this.state.data.course}\n                                            onChange={this.onInputChange}\n                                        >\n                                            {   !!this.state.courses &&\n                                                this.state.courses.map(course => {\n                                                    return <option key={course} value={course}>{course}</option>\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"\">\n                                        <select\n                                            id=\"month\"\n                                            name=\"month\"\n                                            value={this.state.data.month}\n                                            onChange={this.onInputChange}\n                                        >\n                                            <option value={currentMonth} > {months[currentMonth]} </option>\n                                            <option value={(currentMonth - 1 + 12) % 12} > {months[ (currentMonth - 1 + 12) % 12 ]} </option>\n                                            <option value={(currentMonth - 2 + 12) % 12} > {months[ (currentMonth - 2 + 12) % 12 ]} </option>\n                                            <option value={(currentMonth - 3 + 12) % 12} > {months[ (currentMonth - 3 + 12) % 12 ]} </option>\n                                            <option value={(currentMonth - 4 + 12) % 12} > {months[ (currentMonth - 4 + 12) % 12 ]} </option>\n                                            <option value={(currentMonth - 5 + 12) % 12} > {months[ (currentMonth - 5 + 12) % 12 ]} </option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </header>\n                            <main>\n                                <div className=\"container\">\n                                    {\n                                        this.state.data['all_or_one'] === \"one\" && this.state.status === 'ready'\n\n                                        ?      /**\n                                                    FOR SINGLE STUDENT\n                                                */                                  \n                                            <table>\n                                                <thead>\n                                                    <tr>\n                                                        <th> Roll No </th>\n                                                        {\n\n                                                            attendance[Object.keys(attendance)[0]] ? attendance[Object.keys(attendance)[0]].map(data =>{\n                                                                return <th key={data.day}>{data.day}</th>\n                                                            })\n                                                            :\n                                                            <th>Days...</th>\n                                                        }\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr>\n                                                        {Object.keys(attendance)[0] && <td>{Object.keys(attendance)[0]}</td>}\n                                                        {\n                                                            attendance[Object.keys(attendance)[0]] && attendance[Object.keys(attendance)[0]].map(data =>{\n                                                                return <td key={data.day}>{data.present ? \"P\" : 'A'}</td>\n                                                            })\n                                                        }\n                                                    </tr>\n                                                </tbody>\n                                            </table>\n\n                                        :   /**\n                                                FOR FULL CLASS\n                                            */\n                                           <table>\n                                                <thead>\n                                                    <tr>\n                                                        <th> Roll No </th>\n                                                        <th> Classes Attended </th>\n                                                        <th> Total Classes </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {\n                                                        Object.keys(attendance).map(roll_no =>{\n                                                            return <tr key={roll_no}>\n                                                                        <td>{roll_no}</td>\n                                                                        <td>{attendance[roll_no]['totalClassesAttended']}</td>\n                                                                        <td>{attendance[roll_no]['totalClasses']}</td>\n                                                                    </tr>\n                                                        })\n                                                    }\n                                                    \n                                                </tbody>\n                                            </table>\n                                    }\n                                    \n                                </div>\n                            </main>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state)=> {\n    return {\n        students : state.students,\n        teachers : state.teachers,\n        courses : state.courses,\n        attendance : state.attendance\n    }\n}   \n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        setStudent : (filter, projection)=> dispatch(getAndSetStudents(filter, projection)),\n        setTeacher : (filter, projection)=> dispatch(getAndSetTeachers(filter, projection)),\n        setAttendance : (filters)=> dispatch(getAndSetAttendance(filters)),\n        SetCourses : (filter, projection)=> dispatch(getAndSetCourses(filter, projection))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowAttendance);\n"]},"metadata":{},"sourceType":"module"}